Daily succession of phytoplankton, Archaea, Bacteria following a diatom bloom 
	
David M. Needham and Jed A. Fuhrman

Commands for data processsing in qiime, unix, R, etc.

Deindex File:
16S_deindex_16S.txt
Debarcoding Files: 
16S_index8_run2.txt
16S_index9_run2.txt
16S_index10_run2.txt
16S_index12_run2.txt
16S_index13_run2.txt
16S_index14_run2.txt
16S_index15_run2.txt
16S_index16_run2.txt
16S_index1_run5.txt
16S_index2_run5.txt
16S_index3_run5.txt
16S_index4_run5.txt
16S_index5_run5.txt
16S_index6_run5.txt
16S_index7_run5.txt
16S_index8_run5.txt


Starting files for each run moved into /korriban/david/diatom_bloom_tag_analysis

by 

david@narsil:/korriban/david/2_alma_cits16S_dots16S_SAR11_CITS_Cyanocits_71713_nondemult_2$ cp Fuhrman_LabPool_NoIndex_L001_R*_00*.fastq.gz /korriban/david/diatom_bloom_tag_analysis

and 

david@narsil:/korriban/david/5_diatha16S_alma_SAR11dots1_nondemult_2$ cp Fuhrman_Lab_Pool_4_NoIndex_L001_R*_00*.fastq.gz /korriban/david/diatom_bloom_tag_analysis


##installed some software and databases
###installed prinseq-lite-0.20.4.tar.gz downloaded from http://sourceforge.net/projects/prinseq/files/standalone/ on 7/12/14 in /home/david/bin
###install pigz wget http://zlib.net/pigz/pigz-2.3.1.tar.gz  and placed in /home/david/bin

tar -zxvf pigz-2.3.1.tar.gz 
####wget ftp://greengenes.microbio.me/greengenes_release/gg_13_5/gg_13_8_otus.tar.gz 71614
####tar -zxvf gg_13_8_otus.tar.gz
####wget ftp://thebeast.colorado.edu/pub/QIIME_nonstandard_referencedb/Silva_111.tgz
####tar -zxvf Silva_111.tgz
###GOLDDATABASE DOWNLOADED 71614 FROM DATA ON http://drive5.com/uchime/gold.fa COPY/PASTED TO TEXT FILE
mkdir diatom_bloom_tag_analysis
scp /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/gold.fa /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_deindex_16S.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index1_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index1_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index2_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index2_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index3_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index3_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index4_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index4_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index5_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index5_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index6_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index6_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index7_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index7_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index8_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index8_run5.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index9_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index10_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index12_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index13_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index14_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index15_run2.txt /Users/dmneedham/Desktop/DOTS1_ae_dura_mapping_for_pub/16S_index16_run2.txt david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis


#analysis starts here
#unzip sequences files
gunzip Fuhrman_Lab_Pool_4_NoIndex_L001_R1_00*.fastq.gz &&
gunzip Fuhrman_Lab_Pool_4_NoIndex_L001_R2_00*.fastq.gz &&
gunzip Fuhrman_Lab_Pool_4_NoIndex_L001_R3_00*.fastq.gz &&
gunzip Fuhrman_LabPool_NoIndex_L001_R1_00*.fastq.gz &&
gunzip Fuhrman_LabPool_NoIndex_L001_R2_00*.fastq.gz &&
gunzip Fuhrman_LabPool_NoIndex_L001_R3_00*.fastq.gz



#cat forward, index, reverse reads together, Pool_4 has the 0.22, and the other file is the 1um size fraction samples
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R1_00*.fastq > Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq &&
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R2_00*.fastq > Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq &&
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R3_00*.fastq > Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq &&
cat Fuhrman_LabPool_NoIndex_L001_R1_00*.fastq > Fuhrman_LabPool_NoIndex_L001_R1_all.fastq &&
cat Fuhrman_LabPool_NoIndex_L001_R2_00*.fastq > Fuhrman_LabPool_NoIndex_L001_R2_all.fastq &&
cat Fuhrman_LabPool_NoIndex_L001_R3_00*.fastq > Fuhrman_LabPool_NoIndex_L001_R3_all.fastq &&

cp Fuhrman_Lab_Pool_4_NoIndex_L001_R*_all.fastq catted.raw.data.for.upload/ &
cp Fuhrman_LabPool_NoIndex_L001_R*_all.fastq catted.raw.data.for.upload/ 

split --additional-suffix .fastq Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq -l 5000000 Fuhrman_Lab_Pool_4_NoIndex_L001_R1_split. &
split --additional-suffix .fastq Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq -l 5000000 Fuhrman_Lab_Pool_4_NoIndex_L001_R2_split. &
split --additional-suffix .fastq Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq -l 5000000 Fuhrman_Lab_Pool_4_NoIndex_L001_R3_split. &
split --additional-suffix .fastq Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -l 5000000  Fuhrman_LabPool_NoIndex_L001_R1_split. &
split --additional-suffix .fastq Fuhrman_LabPool_NoIndex_L001_R2_all.fastq -l 5000000  Fuhrman_LabPool_NoIndex_L001_R2_split. &
split --additional-suffix .fastq Fuhrman_LabPool_NoIndex_L001_R3_all.fastq -l 5000000  Fuhrman_LabPool_NoIndex_L001_R3_split. &

mkdir zip
mv Fuhrman_Lab_Pool_4_NoIndex_L001_R*_split.* zip
mv Fuhrman_LabPool_NoIndex_L001_R*_split.* zip
find . -name 'Fuhrman_Lab_Pool_4_NoIndex_L001_R1_split*.fastq' -exec zip '{}.zip' '{}' \; &
find . -name 'Fuhrman_Lab_Pool_4_NoIndex_L001_R2_split*.fastq' -exec zip '{}.zip' '{}' \; &
find . -name 'Fuhrman_Lab_Pool_4_NoIndex_L001_R3_split*.fastq' -exec zip '{}.zip' '{}' \; &
find . -name 'Fuhrman_LabPool_NoIndex_L001_R1_split.*.fastq' -exec zip '{}.zip' '{}' \; &
find . -name 'Fuhrman_LabPool_NoIndex_L001_R2_split.*.fastq' -exec zip '{}.zip' '{}' \; &
find . -name 'Fuhrman_LabPool_NoIndex_L001_R3_split.*.fastq' -exec zip '{}.zip' '{}' \; &
mkdir zipped
mv *zip zipped

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/catted.raw.data.for.upload/zip/zipped/* /Volumes/MyBookforMac/dots1.seq.files.for.upload.72015.folder/raw.data.zipped.undemultiplex.unmerged

#trim leftmost 4 bases on forward because they are random bases intended to increase complexity 
perl /home/david/bin/prinseq-lite.pl -fastq Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -trim_left 4 -out_good trim.left4.matches_R2_Fuhrman_LabPool_NoIndex_L001_R1_all &&
perl /home/david/bin/prinseq-lite.pl -fastq Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq  -trim_left 4 -out_good trim.left4.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all &&


#merge with usearch7
usearch7 -fastq_mergepairs trim.left4.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq -reverse Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq -fastq_truncqual 5 -fastq_maxdiffs 20 -fastqout matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -fastq_minmergelen 336 -fastq_maxmergelen 486 &&
usearch7 -fastq_mergepairs trim.left4.matches_R2_Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -reverse Fuhrman_LabPool_NoIndex_L001_R3_all.fastq -fastq_truncqual 5 -fastq_maxdiffs 10 -fastqout matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -fastq_minmergelen 336 -fastq_maxmergelen 486 &&
#get headers for sequences that sucessfully merged
egrep '@MISEQ' matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq| tr -d '@' > seqs.to.keep.merged.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
egrep '@MISEQ' matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq| tr -d '@' > seqs.to.keep.merged.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
#filter index reads to match the merged reads
filter_fasta.py -f Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq -o filtered.by.merged.R2_filt_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq -s seqs.to.keep.merged.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
filter_fasta.py -f Fuhrman_LabPool_NoIndex_L001_R2_all.fastq -o filtered.by.merged.R2_filt_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq -s seqs.to.keep.merged.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
#split libraries based on 6bp index
split_libraries_fastq.py -i matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -b filtered.by.merged.R2_filt_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &&
split_libraries_fastq.py -i matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -b filtered.by.merged.R2_filt_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &&
#scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_deindex_16S.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub 
#custom script that separates the de-indexed fasta files into distinct files, one for each index
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R8_' -fq > index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R9_' -fq > index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R10_' -fq > index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R12_' -fq > index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R13_' -fq > index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R14_' -fq > index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R15_' -fq > index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R16_' -fq > index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R1_' -fq > index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R2_' -fq > index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R3_' -fq > index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R4_' -fq > index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R5_' -fq > index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R6_' -fq > index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R7_' -fq > index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
indexFasta.py index.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/seqs.fastq '16S.R8_' -fq > index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &&
#convert fastaqual
convert_fastaqual_fastq.py -f index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
convert_fastaqual_fastq.py -f index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -c fastq_to_fastaqual &&
#split libraries based on 5bp barcode on forward
split_libraries.py -f index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index8.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index8_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index9.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index9_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index10.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index10_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index12.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index12_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index13.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index13_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index14.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index14_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index15.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index15_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fna -q index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all/index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.qual -o demultiplexed.index16.index.split.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all -m 16S_index16_run2.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index1.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index1_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index2.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index2_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index3.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index3_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index4.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index4_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index5.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index5_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index6.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index6_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index7.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index7_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 
split_libraries.py -f index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fna -q index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all/index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.qual -o demultiplexed.index8.index.split.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all -m 16S_index8_run5.txt -b 5 -z truncate_remove -s 25 -e 0 -l 0 -L 1000 -a 1000 -H 1000 -c -d --reverse_primer_mismatches 0 -g && 

###### copy mapping files to post to figshare
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index8_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index9_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index10_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index12_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index13_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index14_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index15_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index16_run2.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index1_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index2_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index3_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index4_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index5_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index6_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index7_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub &&
scp david@kraken.usc.edu:/home/korriban/david/diatom_bloom_tag_analysis/16S_index8_run5.txt /Users/dmneedham/Desktop/Demultplexing.files.for.dots1.pub
###### copy mapping files to post to figshare



#cat all sequences
cat demultiplexed*all/seqs.fna > dots1.fasta &&
#add in custom made sequence files that match what should be theoretical returned from the mock communities
cat dots1.fasta stag_comm_4714_2_trimmed.fasta even_comm_4714_2_trimmed.fasta > dots1_insilico.mocks.fasta
rm -rf dots1.fasta
mv dots1_insilico.mocks.fasta dots1.fasta
##split_sequence_file_on_sample_ids.py -i dots1.fasta -o dots1.fasta_samples --file_type fasta

identify_chimeric_seqs.py -i dots1.fasta -m usearch61 -r gold.fa --non_chimeras_retention intersection -o list_of_chimeras_dots1.fasta &&
filter_fasta.py -f dots1.fasta -o chimeras_removed_dots1.fasta -n -s list_of_chimeras_dots1.fasta/chimeras.txt &&
pick_otus.py -i chimeras_removed_dots1.fasta -o otus_chimeras_removed_dots1.fasta -s 0.99 &&
pick_rep_set.py -i otus_chimeras_removed_dots1.fasta/chimeras_removed_dots1_otus.txt -f chimeras_removed_dots1.fasta -m most_abundant &&
assign_taxonomy.py -i chimeras_removed_dots1.fasta_rep_set.fasta -r gg_13_8_otus/rep_set/99_otus.fasta -t gg_13_8_otus/taxonomy/99_otu_taxonomy.txt -o gg_uclust_chimeras_removed_dots1.fasta &&
make_otu_table.py -i otus_chimeras_removed_dots1.fasta/chimeras_removed_dots1_otus.txt -o gg_chimeras_removed_dots1_otus.txt.biom -t gg_uclust_chimeras_removed_dots1.fasta/chimeras_removed_dots1.fasta_rep_set_tax_assignments.txt
filter_otus_from_otu_table.py -i gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_gg_chimeras_removed_dots1_otus.txt.biom -n 2


#############################################################################################################################################################################################
DEMULTIPLEXING IN A WAY THAT ALLOWS SUBMISSION TO EMBL, PROCESSING OF 18S
#############################################################################################################################################################################################

#cat forward, index, reverse reads together, Pool_4 has the 0.22, and the other file is the 1um size fraction samples
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R1_00*.fastq > submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq &
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R2_00*.fastq > submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq &
cat Fuhrman_Lab_Pool_4_NoIndex_L001_R3_00*.fastq > submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq &
cat Fuhrman_LabPool_NoIndex_L001_R1_00*.fastq > submission_Fuhrman_LabPool_NoIndex_L001_R1_all.fastq &
cat Fuhrman_LabPool_NoIndex_L001_R2_00*.fastq > submission_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq &
cat Fuhrman_LabPool_NoIndex_L001_R3_00*.fastq > submission_Fuhrman_LabPool_NoIndex_L001_R3_all.fastq &
#trim leftmost 4 bases on forward because they are random bases intended to increase complexity 
perl /home/korriban/david/metagamppool/prinseq-lite.pl -fastq submission_Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -trim_left 4 -out_good submission_trim.left4.matches_R2_Fuhrman_LabPool_NoIndex_L001_R1_all &
perl /home/korriban/david/metagamppool/prinseq-lite.pl -fastq submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq  -trim_left 4 -out_good submission_trim.left4.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all &
#merge with usearch7
usearch7 -fastq_mergepairs trim.left4.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq -reverse Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq -fastq_truncqual 5 -fastq_maxdiffs 20 -fastqout matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -fastq_minmergelen 336 -fastq_maxmergelen 486 &
usearch7 -fastq_mergepairs trim.left4.matches_R2_Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -reverse Fuhrman_LabPool_NoIndex_L001_R3_all.fastq -fastq_truncqual 5 -fastq_maxdiffs 10 -fastqout matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -fastq_minmergelen 336 -fastq_maxmergelen 486 &
#get headers for sequences that sucessfully merged
egrep '@MISEQ' matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq| tr -d '@' > seqs.to.keep.merged.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
egrep '@MISEQ' matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq| tr -d '@' > seqs.to.keep.merged.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
#filter index reads to match the merged reads
filter_fasta.py -f Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq -o filtered.by.merged.R2_filt_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq -s seqs.to.keep.merged.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
filter_fasta.py -f Fuhrman_LabPool_NoIndex_L001_R2_all.fastq -o filtered.by.merged.R2_filt_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq -s seqs.to.keep.merged.matches_R2_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &



#split libraries based on 6bp index

split_libraries_fastq.py -i submission_trim.left4.matches_R2_Fuhrman_Lab_Pool_4_NoIndex_L001_R1_all.fastq -o submission_Lab_Pool_4_R1.fastq -b submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &
split_libraries_fastq.py -i submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R3_all.fastq -o submission_Lab_Pool_4_R3.fastq -b submission_Fuhrman_Lab_Pool_4_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &
split_libraries_fastq.py -i submission_trim.left4.matches_R2_Fuhrman_LabPool_NoIndex_L001_R1_all.fastq -o submission_LabPool_NoIndex_R1.fastq -b submission_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &
split_libraries_fastq.py -i submission_Fuhrman_LabPool_NoIndex_L001_R3_all.fastq -o submission_LabPool_NoIndex_R3.fastq -b submission_Fuhrman_LabPool_NoIndex_L001_R2_all.fastq --store_demultiplexed_fastq --barcode_type 6 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_deindex_16S.txt &


#custom script that separates the de-indexed fasta files into distinct files, one for each index, should have written loops for this...
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R8_' -fq > submission_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R9_' -fq > submission_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R10_' -fq > submission_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R12_' -fq > submission_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R13_' -fq > submission_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R14_' -fq > submission_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R15_' -fq > submission_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R1.fastq/seqs.fastq '16S.R16_' -fq > submission_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R8_' -fq > submission_R3_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R9_' -fq > submission_R3_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R10_' -fq > submission_R3_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R12_' -fq > submission_R3_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R13_' -fq > submission_R3_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R14_' -fq > submission_R3_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R15_' -fq > submission_R3_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_LabPool_NoIndex_R3.fastq/seqs.fastq '16S.R16_' -fq > submission_R3_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R1_' -fq > submission_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R2_' -fq > submission_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R3_' -fq > submission_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R4_' -fq > submission_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R5_' -fq > submission_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R6_' -fq > submission_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R7_' -fq > submission_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R1.fastq/seqs.fastq '16S.R8_' -fq > submission_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R1_' -fq > submission_R3_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R2_' -fq > submission_R3_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R3_' -fq > submission_R3_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R4_' -fq > submission_R3_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R5_' -fq > submission_R3_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R6_' -fq > submission_R3_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R7_' -fq > submission_R3_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
/home/korriban/david/dots1_assemblies/indexFasta.py submission_Lab_Pool_4_R3.fastq/seqs.fastq '16S.R8_' -fq > submission_R3_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &



extract_barcodes.py -f submission_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &
extract_barcodes.py -f submission_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -c barcode_single_end -l 5 -o submission_barcodes_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq &

split_libraries_fastq.py -i submission_barcodes_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index8.fastq -b submission_barcodes_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index8_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index9.fastq -b submission_barcodes_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index9_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index10.fastq -b submission_barcodes_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index10_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index12.fastq -b submission_barcodes_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index12_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index13.fastq -b submission_barcodes_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index13_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index14.fastq -b submission_barcodes_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index14_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index15.fastq -b submission_barcodes_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index15_run2.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_LabPool_NoIndex_R1.index16.fastq -b submission_barcodes_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index16_run2.txt &

split_libraries_fastq.py -i submission_barcodes_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index1.fastq -b submission_barcodes_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index1_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index2.fastq -b submission_barcodes_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index2_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index3.fastq -b submission_barcodes_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index3_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index4.fastq -b submission_barcodes_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index4_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index5.fastq -b submission_barcodes_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index5_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index6.fastq -b submission_barcodes_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index6_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index7.fastq -b submission_barcodes_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index7_run5.txt &
split_libraries_fastq.py -i submission_barcodes_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/reads.fastq -o submission_Lab_Pool_4_NoIndex_R1.index8.fastq -b submission_barcodes_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index8_run5.txt &


split_libraries_fastq.py -i submission_R3_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index8.fastq -b submission_barcodes_R1_index8.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index8_run2.txt &
split_libraries_fastq.py -i submission_R3_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index9.fastq -b submission_barcodes_R1_index9.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index9_run2.txt &
split_libraries_fastq.py -i submission_R3_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index10.fastq -b submission_barcodes_R1_index10.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index10_run2.txt &
split_libraries_fastq.py -i submission_R3_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index12.fastq -b submission_barcodes_R1_index12.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index12_run2.txt &
split_libraries_fastq.py -i submission_R3_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index13.fastq -b submission_barcodes_R1_index13.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index13_run2.txt &
split_libraries_fastq.py -i submission_R3_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index14.fastq -b submission_barcodes_R1_index14.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index14_run2.txt &
split_libraries_fastq.py -i submission_R3_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index15.fastq -b submission_barcodes_R1_index15.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index15_run2.txt &
split_libraries_fastq.py -i submission_R3_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq -o submission_LabPool_NoIndex_R3.index16.fastq -b submission_barcodes_R1_index16.index.split.matches_Fuhrman_LabPool_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index16_run2.txt &

split_libraries_fastq.py -i submission_R3_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index1.fastq -b submission_barcodes_R1_index1.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index1_run5.txt &
split_libraries_fastq.py -i submission_R3_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index2.fastq -b submission_barcodes_R1_index2.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index2_run5.txt &
split_libraries_fastq.py -i submission_R3_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index3.fastq -b submission_barcodes_R1_index3.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index3_run5.txt &
split_libraries_fastq.py -i submission_R3_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index4.fastq -b submission_barcodes_R1_index4.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index4_run5.txt &
split_libraries_fastq.py -i submission_R3_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index5.fastq -b submission_barcodes_R1_index5.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index5_run5.txt &
split_libraries_fastq.py -i submission_R3_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index6.fastq -b submission_barcodes_R1_index6.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index6_run5.txt &
split_libraries_fastq.py -i submission_R3_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index7.fastq -b submission_barcodes_R1_index7.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index7_run5.txt &
split_libraries_fastq.py -i submission_R3_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq -o submission_Lab_Pool_4_NoIndex_R3.index8.fastq -b submission_barcodes_R1_index8.index.split.matches_Fuhrman_Lab_Pool_4_NoIndex_L001_merged_all.fastq/barcodes.fastq --store_demultiplexed_fastq --barcode_type 5 --max_barcode_errors 0 -q 0 -r 305 -p 0 -n 305 -m 16S_index8_run5.txt &



cat submission_LabPool_NoIndex_R1.index*.fastq/seqs.fastq > submission_LabPool_R1_all.fastq
cat submission_LabPool_NoIndex_R3.index*.fastq/seqs.fastq > submission_LabPool_R3_all.fastq

cat submission_Lab_Pool_4_NoIndex_R1.index*.fastq/seqs.fastq > submission_Lab_Pool_4_R1_all.fastq
cat submission_Lab_Pool_4_NoIndex_R3.index*.fastq/seqs.fastq > submission_Lab_Pool_4_R3_all.fastq

#interleave-reads.py submission_LabPool_R1_all.fastq submission_LabPool_R3_all.fastq -o submission_LabPool_R1_R3_all.fastq
#interleave-reads.py submission_Lab_Pool_4_R1_all.fastq submission_Lab_Pool_4_R3_all.fastq -o submission_Lab_Pool_4_R1_R3_all.fastq



###submit to EMBL
split_sequence_file_on_sample_ids.py -i submission_LabPool_R1_all.fastq -o LabPool_split_samples_R1 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_LabPool_R3_all.fastq -o LabPool_split_samples_R3 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_Lab_Pool_4_R1_all.fastq -o Lab_Pool_4_split_samples_R1 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_Lab_Pool_4_R3_all.fastq -o Lab_Pool_4_split_samples_R3 --file_type fastq &

cd LabPool_split_samples_R1
rename 's/run2/R1.run2/' run2*
cd ..
cd LabPool_split_samples_R3
rename 's/run2/R3.run2/' run2*
cd ..
cd Lab_Pool_4_split_samples_R1
rename 's/run5/R1.run5/' run5*
cd ..
cd Lab_Pool_4_split_samples_R3
rename 's/run5/R3.run5/' run5*
cd ..
mkdir comb.demult.for.embl
cp -r LabPool_split_samples_R1/* comb.demult.for.embl
cp -r LabPool_split_samples_R3/* comb.demult.for.embl
cp -r Lab_Pool_4_split_samples_R1/* comb.demult.for.embl
cp -r Lab_Pool_4_split_samples_R3/* comb.demult.for.embl


scp -r david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/LabPool_split_samples /Users/dmneedham/Dropbox/dots1.seq.files.for.upload.72015.folder/ &&
scp -r david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/Lab_Pool_4_split_samples /Users/dmneedham/Dropbox/dots1.seq.files.for.upload.72015.folder/

scp -r david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/LabPool_split_samples /Volumes/MyBookforMac/dots1.seq.files.for.upload.72015.folder
scp -r david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/Lab_Pool_4_split_samples /Volumes/MyBookforMac/dots1.seq.files.for.upload.72015.folder

cp -r /korriban/david/diatom_bloom_tag_analysis/LabPool_split_samples/* /korriban/david/diatom_bloom_tag_analysis/run2.run5.for.upload
cp -r /korriban/david/diatom_bloom_tag_analysis/Lab_Pool_4_split_samples/* /korriban/david/diatom_bloom_tag_analysis/run2.run5.for.upload



split_sequence_file_on_sample_ids.py -i submission_LabPool_R1_all.fastq -o LabPool_split_samples_R1 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_LabPool_R3_all.fastq -o LabPool_split_samples_R3 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_Lab_Pool_4_R1_all.fastq -o Lab_Pool_4_split_samples_R1 --file_type fastq &
split_sequence_file_on_sample_ids.py -i submission_Lab_Pool_4_R3_all.fastq -o Lab_Pool_4_split_samples_R3 --file_type fastq &


#############################################################################################################################################################################################
18S SEQUENCE PROCESSING
#############################################################################################################################################################################################


cp Lab_Pool_4_split_samples_R1/* r1.r3.for.euk.test &
cp Lab_Pool_4_split_samples_R3/* r1.r3.for.euk.test &
cp LabPool_split_samples_R1/* r1.r3.for.euk.test &
cp LabPool_split_samples_R3/* r1.r3.for.euk.test &
cd r1.r3.for.euk.test
cat R1.run5* > all.seqs.R1.run5.fastq &
cat R3.run5* > all.seqs.R3.run5.fastq &

java -jar /home/david/ting/Trimmomatic-0.32/trimmomatic-0.32.jar PE all.seqs.R1.run5.fastq all.seqs.R3.run5.fastq all.seqs.R1.run5.paired.fastq all.seqs.R1.run5.unpaired.fastq all.seqs.R3.run5.paired.fastq all.seqs.R3.run5.unpaired.fastq ILLUMINACLIP:/Trimmomatic-0.32/adapters/TruSeq3-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:225

java -jar /home/david/ting/Trimmomatic-0.32/trimmomatic-0.32.jar SE all.seqs.R1.run5.paired.fastq trim.2.all.seqs.R1.run5.unpaired.fastq MINLEN:290 &
java -jar /home/david/ting/Trimmomatic-0.32/trimmomatic-0.32.jar SE all.seqs.R3.run5.paired.fastq trim.2.all.seqs.R3.run5.unpaired.fastq MINLEN:225 &

egrep '@run' trim.2.all.seqs.R1.run5.unpaired.fastq | tr -d '@' | cut -f1 -d ' '  > trim.2.all.seqs.R1.run5.unpaired.fastq.seqlist
filter_fasta.py -f trim.2.all.seqs.R3.run5.unpaired.fastq -o matches_R1.fastq -s trim.2.all.seqs.R1.run5.unpaired.fastq.seqlist
egrep '@run' matches_R1.fastq | tr -d '@' | cut -f1 -d ' ' > matches_R1.fastq.seqlist
filter_fasta.py -f trim.2.all.seqs.R1.run5.unpaired.fastq -o matches_R3.fastq -s matches_R1.fastq.seqlist
perl /home/korriban/david/metagamppool/prinseq-lite.pl -fastq matches_R3.fastq -trim_left 4 -trim_to_len 290 -out_good trim.2.noN.all.seqs.R1.run5.paired
perl /home/korriban/david/metagamppool/prinseq-lite.pl -fastq matches_R1.fastq -trim_to_len 225 -out_good trim.2.noN.all.seqs.R3.run5.paired

sed 's/ 3:N:0: / 2:N:0: /g' trim.2.noN.all.seqs.R3.run5.paired.fastq > trim.2.noN.all.seqs.R2.run5.paired.fastq
cut trim.2.noN.all.seqs.R2.run5.paired.fastq -f1,4 -d ' ' > R2.for.merging
cut trim.2.noN.all.seqs.R1.run5.paired.fastq -f1,4 -d ' ' > R1.for.merging

sed 's/ 1:N:0:/:1/g' R1.for.merging > R1.for.merging.1.fastq
sed 's/ 2:N:0:/:2/g' R2.for.merging > R2.for.merging.2.fastq


#merge sequences with usearch

./usearch8.0.1623_i86linux32 -fastq_mergepairs R1.for.merging.1.fastq -reverse R2.for.merging.2.fastq -fastqout merged.fastq -fastqout_notmerged_fwd unmerged.r1.fastq -fastqout_notmerged_rev unmerged.r2.fastq


#seq prep 
convert_fastaqual_fastq.py -f unmerged.r1.fastq -o unmerged.r1.fasta -c fastq_to_fastaqual &
convert_fastaqual_fastq.py -f unmerged.r2.fastq -o unmerged.r2.fasta -c fastq_to_fastaqual &
sed -e 's/\(^>.*$\)/#\1#/' unmerged.r1.fasta/unmerged.r1.fna | tr -d "\r" | tr -d "\n" | sed -e 's/$/#/' | tr "#" "\n" | sed -e '/^$/d' > linear.unmerged.r1.fna
sed -e 's/\(^>.*$\)/#\1#/' unmerged.r2.fasta/unmerged.r2.fna | tr -d "\r" | tr -d "\n" | sed -e 's/$/#/' | tr "#" "\n" | sed -e '/^$/d' > linear.unmerged.r2.fna
seq -r linear.unmerged.r2.fna > rc.linear.unmerged.r2.fna
sed -e 's/^/N/' rc.linear.unmerged.r2.fna |  sed -e 's/N>/>/' > Ns.added.linear.unmerged.r2.fna
cut -f1 -d '>' Ns.added.linear.unmerged.r2.fna > r2.no.header
paste linear.unmerged.r1.fna r2.no.header -d '' > combined.seq

#otu picking in qiime with uclust
pick_otus.py -i combined.seq -o otus.combined.seq -s 0.99
pick_rep_set.py -i otus.combined.seq/combined_otus.txt -f combined.seq -m most_abundant


#get pr2 database and format for qiime

wget http://5.196.17.195/pr2/download/representative_sequence_of_each_cluster/gb203_pr2_all_10_28_99p.fasta.tar.gz
tar -zxvf gb203_pr2_all_10_28_99p.fasta.tar.gz
/home/korriban/david/diatom_bloom_tag_analysis/gb203_pr2_all_10_28_99p.fasta
#FORMAT PR2 FOR QIIME
grep ">" /home/korriban/david/diatom_bloom_tag_analysis/gb203_pr2_all_10_28_99p.fasta | cut -f2 -d ">" | cut -f1 -d "|" > ids
grep ">" /home/korriban/david/diatom_bloom_tag_analysis/gb203_pr2_all_10_28_99p.fasta | cut -f2 -d ">" | cut -f2,3,4,5,6,7,8,9,10,11 -d "|" > names
paste ids names > ids.names
sed 's/|/;/g' ids.names > ids.names.2
cut -f1 /home/korriban/david/diatom_bloom_tag_analysis/gb203_pr2_all_10_28_99p.fasta -d "|" > for.filtering.fasta
filter_fasta.py -s ids -f  for.filtering.fasta -o pr2.ids.seqs.fasta

#assign taxonomy with rdp against pr2 database
assign_taxonomy.py -i combined.seq_rep_set.fasta -r pr2.ids.seqs.fasta -t ids.names.2 -m rdp -o all.18S.rep.seqs.rdp.tax --rdp_max_memory 40000


#assign taxonomy with blastn against ncbi cultured seqs database

blastn -db nt -negative_gilist sequence.gi.txt -query 18s.for.blast.combined.seq_rep_set.fasta -out all.blastn.18s -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore sseqid sallseqid sgi sacc staxids sscinames scomnames stitle" -max_target_seqs 1 --threads 120
sort -u all.blastn.18s -k1,1 > all.blastn.18S.top.hit

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/all.blastn.18S.top.hit /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files

cut -f2 all.18S.rep.seqs.rdp.tax/*txt 




make_otu_table.py -i otus.combined.seq/combined_otus.txt -o combined.seqs.biom -t all.18S.rep.seqs.rdp.tax/combined.seq_rep_set_tax_assignments.txt

filter_samples_from_otu_table.py --sample_id_fp /korriban/david/diatom_bloom_tag_analysis/1um.samples -i combined.seqs.biom -o onemicron.combined.seqs.biom

filter_otus_from_otu_table.py -i onemicron.combined.seqs.biom -n 2 -o n2.onemicron.combined.seqs.biom


filter_taxa_from_otu_table.py -i n2.onemicron.combined.seqs.biom -o wout.dino.pr2.pos.chl.combined.seqs.biom -p Chlorophyta,Archaeplastida,Stramenopiles,Haptophyta -n MAST


filter_taxa_from_otu_table.py -i n2.onemicron.combined.seqs.biom -o w.phototrophic.dino.pr2.pos.chl.combined.seqs.biom -p Chlorophyta,Archaeplastida,Stramenopiles,Haptophyta,Alexandrium+fundyense-GroupI,Blastodinium+contortum,Cochlodinium+fulvescens,Gonyaulax+polygramma,Gonyaulax+spinifera_strain1,Gonyaulax+spinifera_strain2,Heterocapsa+pygmea,Lingulodinium+polyedrum,Neoceratium+furca,Protoperidinium+denticulatum,Karlodinium+micrum -n MAST


filter_taxa_from_otu_table.py -i n2.onemicron.combined.seqs.biom -o w.dino.pr2.pos.chl.combined.seqs.biom -p Chlorophyta,Archaeplastida,Stramenopiles,Haptophyta,Dinophyta -n MAST


biom convert -i wout.dino.pr2.pos.chl.combined.seqs.biom -o wout.dino.pr2.pos.chl.combined.seqs.biom.txt --table-type "OTU table" --to-tsv
biom convert -i w.phototrophic.dino.pr2.pos.chl.combined.seqs.biom -o w.phototrophic.dino.pr2.pos.chl.combined.seqs.biom.txt --table-type "OTU table" --to-tsv 
biom convert -i w.dino.pr2.pos.chl.combined.seqs.biom -o w.dino.pr2.pos.chl.combined.seqs.biom.txt --table-type "OTU table" --to-tsv



#############################################################################################################################################################################################
HEATMAP:	filter mitochondria and chloroplast sequences from 16S OTU table based on GG taxonomy, remove singletons, rarify, split 1um and 0.22 size fractions, filter for OTUs >0.4% in either table for heatmap
#############################################################################################################################################################################################

#remove chloroplast/mitochondrial sequences from gg tax otu table
filter_taxa_from_otu_table.py -i gg_chimeras_removed_dots1_otus.txt.biom -o no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -n c__Chloroplast,f__mitochondria &&
#remove singletons from chloroplast/mitochondria removed table
filter_otus_from_otu_table.py -i no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -n 2 &&
#rarify table with mito/chl removed
single_rarefaction.py -i no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -d 6390 &&
#select0.22 samples mito/chl rm
filter_samples_from_otu_table.py -i rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --sample_id_fp point22.samples -o point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#select1um samples mito/chl rm
filter_samples_from_otu_table.py -i rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --sample_id_fp 1um.samples -o 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#filter table for only sequences that represent >0.4% of total of point22 size mito/chl rm
filter_otus_from_otu_table.py -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.004 -o over0.004.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#filter table for only sequences that represent >0.4% of total of 1um size mito/chl rm
filter_otus_from_otu_table.py -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.004 -o over0.004.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#convert OTU tables for the point22 and 1um size fraction that are greater than 0.4% so that can select sequences
biom convert -i over0.004.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.004.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -b --header-key taxonomy &&
biom convert -i over0.004.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.004.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -b --header-key taxonomy

#select seq headers for 1um and 0.22 >0.4%
grep "denovo" over0.004.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > point22.gg.over.0.004.bact.seqs
grep "denovo" over0.004.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > 1um.over.0.004.bact.seqs

#concatenate seq headers for 1um and 0.22 >0.4%
cat point22.gg.over.0.004.bact.seqs 1um.over.0.004.bact.seqs > gg.point2.and.seqs

#sort them to and the uniq
sort gg.point2.and.seqs | uniq > gg.uniq.point2.and.1um.seqs

#get the OR OTUs for 0.4% heatmaps
filter_otus_from_otu_table.py -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -e gg.uniq.point2.and.1um.seqs --negate_ids_to_exclude -o OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom
filter_otus_from_otu_table.py -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -e gg.uniq.point2.and.1um.seqs --negate_ids_to_exclude -o OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom




#convert OTU tables for the point22 and 1um size fraction that are greater than 0.4% in either the point 22 or 1um size fraction
biom convert -i OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b --header-key taxonomy
biom convert -i OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b --header-key taxonomy

#get seqs for the 0.22 or 1um over 0.4% for alignment and phylogenetic tree
filter_fasta.py -f chimeras_removed_dots1.fasta_rep_set.fasta -o OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta -s gg.uniq.point2.and.1um.seqs

sed 's/denovo/0.22_denovo/g' OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > point22denovo_OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/denovo/1um_denovo/g' OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > 1umdenovo_OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/denovo/0.22_denovo/g' OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta > point22denovo_OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta &&
sed 's/denovo/1um_denovo/g' OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta > 1umdenovo_OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta


KEY OUTPUT FILES
OTU TABLE FOR point22 HEATMAP w gg Taxonomy: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22denovo_OR.threshold_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots2
	
OTU TABLE FOR 1um HEATMAP w gg Taxonomy: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1umdenovo_OR.threshold_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots2
Representative sequences for phylogeny and tree in heatmap: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22denovo_OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/ae_dots2 &&
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1umdenovo_OR.threshold_chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/ae_dots2


############################################################################################################################################################################################
HEATMAP:	filter mitochondria and chloroplast sequences from 16S OTU table based on GG taxonomy, remove singletons, rarify, split 1um and 0.22 size fractions, filter for OTUs >1% in either table for heatmap
#############################################################################################################################################################################################

#remove chloroplast/mitochondrial sequences from gg tax otu table
filter_taxa_from_otu_table.py -i gg_chimeras_removed_dots1_otus.txt.biom -o no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -n c__Chloroplast,f__mitochondria &&
#remove singletons from chloroplast/mitochondria removed table
filter_otus_from_otu_table.py -i no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -n 2 &&
#rarify table with mito/chl removed
single_rarefaction.py -i no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -d 6390 &&
#select0.22 samples mito/chl rm
filter_samples_from_otu_table.py -i rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --sample_id_fp point22.samples -o point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#select1um samples mito/chl rm
filter_samples_from_otu_table.py -i rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --sample_id_fp 1um.samples -o 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&

#filter table for only sequences that represent >1% of total of point22 size mito/chl rm
filter_otus_from_otu_table.py -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.01 -o over0.01.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#filter table for only sequences that represent >1% of total of 1um size mito/chl rm
filter_otus_from_otu_table.py -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.01 -o over0.01.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom &&
#convert OTU tables for the point22 and 1um size fraction that are greater than 1% so that can select sequences
biom convert -i over0.01.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.01.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -b --header-key taxonomy &&
biom convert -i over0.01.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.01.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -b --header-key taxonomy

#select seq headers for 1um and 0.22 >1%
grep "denovo" over0.01.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > point22.gg.over.0.01.bact.seqs
grep "denovo" over0.01.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > 1um.over.0.01.bact.seqs

#concatenate seq headers for 1um and 0.22 >1%
cat point22.gg.over.0.01.bact.seqs 1um.over.0.01.bact.seqs > 1percent.gg.point2.and.seqs

#sort them to and the uniq
sort 1percent.gg.point2.and.seqs | uniq > uniq.1percent.gg.point2.and.seqs

#get the OR OTUs for 1% heatmaps
filter_otus_from_otu_table.py -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -e uniq.1percent.gg.point2.and.seqs --negate_ids_to_exclude -o OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom
filter_otus_from_otu_table.py -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -e uniq.1percent.gg.point2.and.seqs --negate_ids_to_exclude -o OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom




#convert OTU tables for the point22 and 1um size fraction that are greater than 1% in either the point 22 or 1um size fraction
biom convert -i OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv
biom convert -i OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv

#get seqs for the 0.22 or 1um over 1% for alignment and phylogenetic tree
filter_fasta.py -f chimeras_removed_dots1.fasta_rep_set.fasta -o OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta -s uniq.1percent.gg.point2.and.seqs

sed 's/denovo/0.22_denovo/g' OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > point22denovo_OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/denovo/1um_denovo/g' OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > 1umdenovo_OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/denovo/0.22_denovo/g' OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta > point22denovo_OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta &&
sed 's/denovo/1um_denovo/g' OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta > 1umdenovo_OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta


KEY OUTPUT FILES
OTU TABLE FOR point22 HEATMAP w gg Taxonomy: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22denovo_OR.1percent_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/Nature_submission
	
OTU TABLE FOR 1um HEATMAP w gg Taxonomy: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1umdenovo_OR.1percent_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/Nature_submission
Representative sequences for phylogeny and tree in heatmap: 
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22denovo_OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/Nature_submission
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1umdenovo_OR.1percent_chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/52615.diatom.bloom.paper.docs

############
get 5% (peak) or 1% (average) for bacteria for either size fraction


# filter table for only sequences that represent >1% of any sample
biom convert -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv

biom convert -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o for.R.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv



tail -n +2 for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
tail -n +2 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/#OTU ID//g' tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > sed.tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/#OTU ID//g' tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > sed.tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt





R
table <- read.table("sed.tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",row.names=1,header=T,check.names=F)
table2 <- read.table("sed.tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",row.names=1,header=T,check.names=F)

max.of.rows <- apply(table,1,max)
max.of.rows2 <- apply(table2,1,max)
avg.of.rows <- rowMeans(table)
avg.of.rows2 <- rowMeans(table2)
table$max <- max.of.rows
table2$max <- max.of.rows2
table$avg <- avg.of.rows
table2$avg <- avg.of.rows2
over5percent <- subset(table, max > 319)
over5percent2 <- subset(table2, max > 319)
avg1percent <- subset(table, avg > 63)
avg1percent2 <- subset(table2, avg > 63)
write.table(file="over5percent.point22", over5percent,quote=F)
write.table(file="over5percent.1um", over5percent2,quote=F)
write.table(file="over1percent.point22", avg1percent,quote=F)
write.table(file="over1percent.1um", avg1percent2,quote=F)

grep "denovo" over5percent.point22 | cut -f1 -d ' '  > over5percent.point22.seqs
grep "denovo" over5percent.1um | cut -f1 -d ' ' > over5percent.1um.seqs
grep "denovo" over1percent.point22 | cut -f1 -d ' '  > over1percent.point22.seqs
grep "denovo" over1percent.1um | cut -f1 -d ' ' > over0.5percent.1um.seqs

cat over5percent.point22.seqs over5percent.1um.seqs over1percent.point22.seqs over0.5percent.1um.seqs | sort | uniq > max.avg.5and1.seqs.point22.or.1um

filter_otus_from_otu_table.py -e max.avg.5and1.seqs.point22.or.1um --negate_ids_to_exclude -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom


filter_otus_from_otu_table.py -e max.avg.5and1.seqs.point22.or.1um --negate_ids_to_exclude -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom



biom convert -i max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv

biom convert -i max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv


filter_fasta.py -s max.avg.5and1.seqs.point22.or.1um -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.5and1.seqs.bact.arch.fasta

tail -n +2 for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

tail -n +2 for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/0.22_den/g' rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > point22.rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/1um_den/g' rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | sed 's/#OTU ID//g'> 1um.rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt



R
table <- read.table("point22.rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
table1 <- read.table("1um.rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
names <- read.table("vlookup.bact.arch",sep = "\t",row.names=1)


test1 <- merge(table,names,by="row.names")
test2 <- merge(table1,names,by="row.names")


write.table(test1, file="point22.max5.avg1.otu.csv",quote=F,sep = ",")
write.table(test2, file="1um.max5.avg1.otu.csv",quote=F,sep = ",")


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1um.max5.avg1.otu.csv /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/1.5.point22.1um.heatmap &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22.max5.avg1.otu.csv /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/1.5.point22.1um.heatmap &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/max.avg.5and1.seqs.bact.arch.fasta /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/1.5.point22.1um.heatmap



##################################################
get 2.5% (peak) or 0.5% (average) for bacteria for either size fraction
##################################################


biom convert -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv

biom convert -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o for.R.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv



tail -n +2 for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
tail -n +2 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/#OTU ID//g' tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > sed.tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/#OTU ID//g' tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > sed.tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt


mkdir 2.5peak.0.5avg
cp sed.tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 2.5peak.0.5avg
cp sed.tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 2.5peak.0.5avg
cd 2.5peak.0.5avg

R
table <- read.table("sed.tail.for.R.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",row.names=1,header=T,check.names=F)
table2 <- read.table("sed.tail.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",row.names=1,header=T,check.names=F)

max.of.rows <- apply(table,1,max)
max.of.rows2 <- apply(table2,1,max)
avg.of.rows <- rowMeans(table)
avg.of.rows2 <- rowMeans(table2)
table$max <- max.of.rows
table2$max <- max.of.rows2
table$avg <- avg.of.rows
table2$avg <- avg.of.rows2
over5percent <- subset(table, max > 160)
over5percent2 <- subset(table2, max > 160)
avg1percent <- subset(table, avg > 32)
avg1percent2 <- subset(table2, avg > 32)
write.table(file="over2.5percent.point22", over5percent,quote=F)
write.table(file="over2.5percent.1um", over5percent2,quote=F)
write.table(file="avg0.5percent.point22", avg1percent,quote=F)
write.table(file="avg0.5percent.1um", avg1percent2,quote=F)

grep "denovo" over2.5percent.point22 | cut -f1 -d ' '  > over5percent.point22.seqs
grep "denovo" over2.5percent.1um | cut -f1 -d ' ' > over5percent.1um.seqs
grep "denovo" avg0.5percent.point22 | cut -f1 -d ' '  > over1percent.point22.seqs
grep "denovo" avg0.5percent.1um | cut -f1 -d ' ' > over0.5percent.1um.seqs

cat over5percent.point22.seqs over5percent.1um.seqs over1percent.point22.seqs over0.5percent.1um.seqs | sort | uniq > max.avg.5and1.seqs.point22.or.1um

cd ..
cp point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom 2.5peak.0.5avg
cp 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom 2.5peak.0.5avg
cd 2.5peak.0.5avg/

filter_otus_from_otu_table.py -e max.avg.5and1.seqs.point22.or.1um --negate_ids_to_exclude -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom


filter_otus_from_otu_table.py -e max.avg.5and1.seqs.point22.or.1um --negate_ids_to_exclude -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom



biom convert -i max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv

biom convert -i max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv

cd ..
cp chimeras_removed_dots1.fasta_rep_set.fasta 2.5peak.0.5avg/
cd 2.5peak.0.5avg/

filter_fasta.py -s max.avg.5and1.seqs.point22.or.1um -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.5and1.seqs.bact.arch.fasta

tail -n +2 for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

tail -n +2 for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/0.22_den/g' rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > point22.rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/1um_den/g' rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | sed 's/#OTU ID//g'> 1um.rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt


cd ..
cp vlookup.bact.arch 2.5peak.0.5avg/
cd 2.5peak.0.5avg/

R
table <- read.table("point22.rm.for.R.max.avg.5and1.seqs.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
table1 <- read.table("1um.rm.for.R.max.avg.5and1.seqs.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
names <- read.table("vlookup.bact.arch",sep = "\t",row.names=1)


test1 <- merge(table,names,by="row.names")
test2 <- merge(table1,names,by="row.names")


write.table(test1, file="point22.max5.avg1.otu.csv",quote=F,sep = ",")
write.table(test2, file="1um.max5.avg1.otu.csv",quote=F,sep = ",")


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/2.5peak.0.5avg/1um.max5.avg1.otu.csv /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/bact.arch.0.25.peak.0.5avg &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/2.5peak.0.5avg/point22.max5.avg1.otu.csv /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/bact.arch.0.25.peak.0.5avg &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/2.5peak.0.5avg/max.avg.5and1.seqs.bact.arch.fasta /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/bact.arch.0.25.peak.0.5avg


###########################################################################################################################################################################################
HEATMAP: select chloroplast sequences from OTU table based on GG taxonomy, remove singletons, split 1um and 0.22 size fractions, rarify, filter to 0.4% for 1um size fraction
#############################################################################################################################################################################################


#select chloroplast sequences from gg tax otu table
filter_taxa_from_otu_table.py -i gg_chimeras_removed_dots1_otus.txt.biom -o only.chl_gg_chimeras_removed_dots1_otus.txt.biom -p c__Chloroplast

#remove singletons from chloroplast table
filter_otus_from_otu_table.py -i only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -n 2

#select 1um size fraction chlorophyll
filter_samples_from_otu_table.py --sample_id_fp 1um.samples -i no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o 1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

#select 0.22 fraction chlorophyll
filter_samples_from_otu_table.py --sample_id_fp run2_samples_to_keep.txt -i no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

#rarify 1um chloroplast
single_rarefaction.py -i 1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -d 2284

#filter table for only sequences that represent >0.4% of total of 1umchl 
filter_otus_from_otu_table.py -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.004 -o over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

#convert to biom table
biom convert -i over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b --header-key taxonomy

#select headers for those representaive sequences taht are greater than 0.4%
grep "denovo" over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > over.0.004.chl.seqs

#select sequences for chl that are greater than 0.4% on average
filter_fasta.py -f chimeras_removed_dots1.fasta_rep_set.fasta -o over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta -s over.0.004.chl.seqs

sed 's/denovo/chl_denovo/g' over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > chl_over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt &&
sed 's/denovo/chl_denovo/g' over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta > chl_over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta


KEY OUTPUT FILES
OTU table for 0.4% >1um heatmap:
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/Nature_submission
Representive sequences for phylogenetic tree for heatmap:
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_over0.004.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta /Users/dmneedham/Desktop/Nature_submission


###########################################################################################################################################################################################
5 any day or 1 average% HEATMAPs: select chloroplast sequences from OTU table based on GG taxonomy, remove singletons, split 1um and 0.22 size fractions, rarify, filter to 0.4% for 1um size fraction
#############################################################################################################################################################################################


#select chloroplast sequences from gg tax otu table
filter_taxa_from_otu_table.py -i gg_chimeras_removed_dots1_otus.txt.biom -o only.chl_gg_chimeras_removed_dots1_otus.txt.biom -p c__Chloroplast

#remove singletons from chloroplast table
filter_otus_from_otu_table.py -i only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -n 2

#select 1um size fraction chlorophyll
filter_samples_from_otu_table.py --sample_id_fp 1um.samples -i no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o 1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

#select 0.22 fraction chlorophyll
filter_samples_from_otu_table.py --sample_id_fp run2_samples_to_keep.txt -i no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

#rarify 1um chloroplast
single_rarefaction.py -i 1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -d 2284


#filter table for only sequences that represent >1% of total of 1umchl 
filter_otus_from_otu_table.py -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.01 -o over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

# filter table for only sequences that represent >1% of any sample
biom convert -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o for.R.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv
tail -n +2 for.R.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > otu.table.for.r.filt
sed 's/#OTU ID//g' otu.table.for.r.filt > otu.table.for.r.filt.2

R
table <- read.table("otu.table.for.r.filt.2",row.names=1,header=T,check.names=F)
max.of.rows <- apply(table,1,max)
avg.of.rows <- rowMeans(table)
table$max <- max.of.rows
table$avg <- avg.of.rows
over5percent <- subset(table, max > 114)
over1percent <- subset(table, max > 22)
avg1percent <- subset(table, avg > 22)
avg0.5percent <- subset(table, avg > 11)
write.table(file="over5percent", over5percent,quote=F)
write.table(file="over1percent", over1percent,quote=F)
write.table(file="avg1percent", avg1percent,quote=F)
write.table(file="avg0.5percent", avg0.5percent,quote=F)

grep "denovo" over5percent | cut -f1 -d ' '  > over5percent.max.seqs
grep "denovo" over1percent | cut -f1 -d ' ' > over1percent.max.seqs
grep "denovo" avg1percent | cut -f1 -d ' '  > over1percent.avg.seqs
grep "denovo" avg0.5percent | cut -f1 -d ' ' > over0.5percent.avg.seqs

cat over5percent.max.seqs over1percent.avg.seqs | sort | uniq > max.avg.5and1.seqs
cat over1percent.max.seqs over0.5percent.avg.seqs | sort | uniq > max.avg.1and0.5.seqs

filter_otus_from_otu_table.py -e max.avg.5and1.seqs --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 

filter_otus_from_otu_table.py -e max.avg.1and0.5.seqs --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 

biom convert -i max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -o for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv

biom convert -i max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -o for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv


filter_fasta.py -s max.avg.5and1.seqs -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.5and1.seqs.fasta
filter_fasta.py -s max.avg.1and0.5.seqs -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.1and0.5.seqs.fasta

tail -n +2 for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

tail -n +2 for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/chl_den/g' rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > chl.rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/chl_den/g' rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | sed 's/#OTU ID//g'> chl.rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt



R
table <- read.table("chl.rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
names <- read.table("chl.vlookup.2",sep = "\t",row.names=1)
test <- merge(table,names,by="row.names")
test.2 <- test[,-44]
test.3 <- test[,-1]
rownames(test.3) <- test[,44]
test.4 <- test.3[,-43]
t.test.2 <- as.data.frame(t(test.4))
dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.chl.dates.nonsort <- merge(t.test.2,dates,by="row.names")
rownames(df.chl.dates.nonsort) <- df.chl.dates.nonsort[,37]
df.chl.dates.nonsort.2 <- df.chl.dates.nonsort[,-37]
df.chl.dates.nonsort.3 <- df.chl.dates.nonsort.2[,-1]
t.df.chl.dates.nonsort.3 <- as.data.frame(t(df.chl.dates.nonsort.3))
write.table(t.df.chl.dates.nonsort.3, file="max5.avg1.otu.txt",quote=F,sep = ",")





scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/max.avg.5and1.seqs.fasta /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/max5.avg1.otu.txt /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap



#export for no.dino comparison in LSA
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl.rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/R1.R3

#convert to biom table
biom convert -i over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv

#select headers for those representaive sequences taht are greater than 1%
grep "denovo" over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > over.0.01.chl.seqs

#select sequences for chl that are greater than 1% on average
filter_fasta.py -f chimeras_removed_dots1.fasta_rep_set.fasta -o over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta -s over.0.01.chl.seqs

sed 's/denovo/chl_denovo/g' over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > chl_over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt &&
sed 's/denovo/chl_denovo/g' over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta > chl_over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta


KEY OUTPUT FILES
OTU table for 1% >1um heatmap:
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/Nature_submission
Representive sequences for phylogenetic tree for heatmap:
	scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_over0.01.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt_rep_set.fasta /Users/dmneedham/Desktop/52615.diatom.bloom.paper.docs

################################
2.5 peak or 0.5% on average chlorophyll for heatmap
################################


mkdir chl.2.5peak.0.5avg
cp otu.table.for.r.filt.2 chl.2.5peak.0.5avg
cp rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom chl.2.5peak.0.5avg
cp chimeras_removed_dots1.fasta_rep_set.fasta chl.2.5peak.0.5avg
cp chl.vlookup chl.2.5peak.0.5avg
cd chl.2.5peak.0.5avg


R
table <- read.table("otu.table.for.r.filt.2",row.names=1,header=T,check.names=F)
max.of.rows <- apply(table,1,max)
avg.of.rows <- rowMeans(table)
table$max <- max.of.rows
table$avg <- avg.of.rows
over5percent <- subset(table, max > 58)
avg1percent <- subset(table, avg > 12)
write.table(file="over5percent", over5percent,quote=F)
write.table(file="avg1percent", avg1percent,quote=F)

grep "denovo" over5percent | cut -f1 -d ' '  > over5percent.max.seqs
grep "denovo" avg1percent | cut -f1 -d ' '  > over1percent.avg.seqs

cat over5percent.max.seqs over1percent.avg.seqs | sort | uniq > max.avg.5and1.seqs
cat over1percent.max.seqs over0.5percent.avg.seqs | sort | uniq > max.avg.1and0.5.seqs

filter_otus_from_otu_table.py -e max.avg.5and1.seqs --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 

filter_otus_from_otu_table.py -e max.avg.1and0.5.seqs --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 

biom convert -i max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -o for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv

biom convert -i max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  -o for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt  --table-type "OTU table" --to-tsv


filter_fasta.py -s max.avg.5and1.seqs -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.5and1.seqs.fasta
filter_fasta.py -s max.avg.1and0.5.seqs -f chimeras_removed_dots1.fasta_rep_set.fasta -o max.avg.1and0.5.seqs.fasta

tail -n +2 for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

tail -n +2 for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/chl_den/g' rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > chl.rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

sed 's/den/chl_den/g' rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt | sed 's/#OTU ID//g'> chl.rm.for.R.max.avg.1and0.5.seq.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt



R
table <- read.table("chl.rm.for.R.max.avg.5and1.seqs.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
names <- read.table("chl.vlookup.2",sep = "\t",row.names=1)
test <- merge(table,names,by="row.names")
write.table(test, file="max5.avg1.otu.txt",quote=F,sep = ",")



scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl.2.5peak.0.5avg/max.avg.5and1.seqs.fasta /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.0.25.peak.0.5avg &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl.2.5peak.0.5avg/max5.avg1.otu.txt /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.0.25.peak.0.5avg





###########################################################################################################################################################################################
make otu tables for LSA and get SILVA, NCBI, GG taxonomy for ATTRIBUTE TABLES, i.e., this output enables classification of all sequences manually, where necessary and for inputting to the network diagrams
#############################################################################################################################################################################################
biom convert -i no.singletons_gg_chimeras_removed_dots1_otus.txt.biom -o no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt -b
grep "denovo" no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt | cut -f1 > no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.seqs
filter_fasta.py -f chimeras_removed_dots1.fasta_rep_set.fasta -o no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -s no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.seqs 
assign_taxonomy.py -i no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -r gg_13_8_otus/rep_set/99_otus.fasta -t gg_13_8_otus/taxonomy/99_otu_taxonomy.txt -o gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta &&
assign_taxonomy.py -i no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -r Silva_111_post/rep_set/99_Silva_111_rep_set.fasta -t Silva_111_post/taxonomy/99_Silva_111_taxa_map_RDP_6_levels.txt -o silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
#add 10719513 to negative_gilist file 
blastn -db nt -negative_gilist sequence.gi.txt -num_threads 120 -query no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -out top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore sseqid sallseqid sgi sacc staxids sscinames scomnames stitle" -max_target_seqs 1 &
make_blast_db
makeblastdb -in PhytoRef_with_name_only.fasta -out phytoref.db.name -dbtype nucl
blastn -db phytoref.db.name -num_threads 120 -query no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -out phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore sseqid sallseqid sgi sacc staxids sscinames scomnames stitle" -max_target_seqs 1 &

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/Nature_submission

blastn -db phytoref.db -num_threads 120 -query no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -out phytoref.full.taxonomy.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore sseqid sallseqid sgi sacc staxids sscinames scomnames stitle" -max_target_seqs 1 &

 


join -t $'\t' -1 1 -2 1 -e 0 -o 1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.10,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,2.10,2.11,2.12,2.13,2.14,2.15,2.16,2.17,2.18,2.19 -a1 top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta > test3


cat gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/*txt | cut -f1,2 > cut_gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
cat silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/*txt | cut -f1,2 > cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
paste cut_gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta > gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
sort gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -k1,1 > sorted_gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
cut top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -f1,18 > comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
sort comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -k1,1 > sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
uniq sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta > uniq_sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
join -t $'\t' sorted_gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta uniq_sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -a1 > gg_silva_blastn_no.singletons.LSAtax
cut gg_silva_blastn_no.singletons.LSAtax -f1,2,4,5 > id.gg.silva.blast.tax_forLSA 



sed 's/denovo/0.22_denovo/g' id.gg.silva.blast.tax_forLSA  > point22_denovo_id.gg.silva.blast.tax_forLSA 
sed 's/denovo/1um_denovo/g' id.gg.silva.blast.tax_forLSA > onemicron_denovo_id.gg.silva.blast.tax_forLSA 
sed 's/denovo/chl_denovo/g' id.gg.silva.blast.tax_forLSA > chl_denovo_id.gg.silva.blast.tax_forLSA

cat chl_denovo_id.gg.silva.blast.tax_forLSA onemicron_denovo_id.gg.silva.blast.tax_forLSA point22_denovo_id.gg.silva.blast.tax_forLSA > point22_1um_chl_denovo_id.gg.silva.blast.tax_forLSA


#export to R to make average numbers for each OTU for node size
filter_samples_from_otu_table.py --sample_id_fp point22.samples -i no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o 0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom
filter_samples_from_otu_table.py --sample_id_fp 1um.samples -i no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o 1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom
filter_samples_from_otu_table.py --sample_id_fp chl_samples_1um_for_keeping.txt -i no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom
biom convert -i 0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt -o 0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt -b
biom convert -i 1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt -o 1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt -b
biom convert -i chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt -o chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt -b
sed 's/denovo/0.22_denovo/g' 0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > point22denovo_0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
sed 's/denovo/1um_denovo/g' 1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > oneumdenovo_1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
sed 's/denovo/chl_denovo/g' chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > chldenovo_chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
tail -n +2 point22denovo_0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > nohead.0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
tail -n +2 oneumdenovo_1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > nohead.1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
tail -n +2 chldenovo_chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt > nohead.chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt
R
point22_4avg <- read.table(as.matrix("nohead.0.22.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt"),header=TRUE,row.names=1)
point22_4percent <- point22_4avg/colSums(point22_4avg)
point22_mean <- rowMeans(point22_4percent)
point22_mean.df <- as.data.frame(point22_mean)
write.table(point22_mean.df, file="point22_mean.df")
onemicron_4avg <- read.table(as.matrix("nohead.1um.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt"),header=TRUE,row.names=1)
onemicron_4percent <- onemicron_4avg/colSums(onemicron_4avg)
onemicron_mean <- rowMeans(onemicron_4percent)
onemicron_mean.df  <- as.data.frame(onemicron_mean)
write.table(onemicron_mean.df, file="onemicron_mean.df")
chl_4avg <- read.table(as.matrix("nohead.chl.no.singletons_gg_chimeras_removed_dots1_otus.txt.biom.txt.txt"),header=TRUE,row.names=1)
chl_4percent <- chl_4avg/colSums(chl_4avg)
chl_mean <- rowMeans(chl_4percent)
chl_mean.df <- as.data.frame(chl_mean)
write.table(chl_mean.df, file="chl_mean.df")
tail -n +2 point22_mean.df > point22_mean.df2
tail -n +2 onemicron_mean.df > onemicron_mean.df2
tail -n +2 chl_mean.df > chl_mean.df2
sed 's/"//g' point22_mean.df2 > clean_point22_mean.df2
sed 's/"//g' onemicron_mean.df2 > clean_onemicron_mean.df2
sed 's/"//g' chl_mean.df2 > clean_chl_mean.df2
cat clean_point22_mean.df2 clean_onemicron_mean.df2 clean_chl_mean.df2 > point22.1micron.chl.mean.df


scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22.1micron.chl.mean.df /Users/dmneedham/Desktop/ae_dots2
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22_1um_chl_denovo_id.gg.silva.blast.tax_forLSA /Users/dmneedham/Desktop/ae_dots2


scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/id.gg.silva.blast.tax_forLSA /Users/dmneedham/Desktop/ae_dots2




assign_taxonomy.py --uclust_max_accepts 1 -i no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -r Silva_111_post/rep_set/99_Silva_111_rep_set.fasta -t Silva_111_post/taxonomy/99_Silva_111_taxa_map_RDP_6_levels.txt -o silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1
cat gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/*txt | cut -f1,2 | sort > sort.cut_gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
cat silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/*txt | cut -f1,2 | sort > sort.cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
cat silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1/*txt | cut -f1,2 | sort > sort.cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1
grep "denovo" silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1/*log | cut -f3,4,9,10 | sort -k3 > silva_max1.w.hit.percentage
paste sort.cut_gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta sort.cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1 silva_max1.w.hit.percentage > test3


paste sort.cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta_max_accepts_1 sort.cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta | cut -f1,2,4 > test4


paste cut_gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta cut_silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta > gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
sort gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -k1,1 > sorted_gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
cut top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -f1,18 > comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
sort comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -k1,1 > sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
uniq sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta > uniq_sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
join -t $'\t' sorted_gg_silva_cut_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta uniq_sorted_comnames_top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta -a1 > gg_silva_blastn_no.singletons.LSAtax
cut gg_silva_blastn_no.singletons.LSAtax -f1,2,4,5 > id.gg.silva.blast.tax_forLSA 



#############################################################################################################################################################################################
HEATMAP: R code
#############################################################################################################################################################################################

#representative sequence headers were also renamed with vlookup, imported in Geneious v 6.1.6, aligned with MAFFT algorithm G-INS-i, scoring matrix 100pam / k- 2 gap open penaltiy 2.84, offset value 0.275. and the geneious tree builder was used to make phylogeny using the maximum likelihood PHYML default with 100 bootstraps
#replicates averaged manually in excel, 5/24 #2 deleted
#make all spaces in abbreviated names underscores in chl
#delete " ' " from chl.tree newick. file 




#5% chloroplast any single day or 1% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap")
chl.tree <- read.tree("chl.tree") 
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("max5.avg1.otu.csv",row.names=1,check.names=F)/2284)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.5.percent.anyday.1.average.2.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("chl.50.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()


#5% point22 bact/arch any single day or 1% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/1.5.point22.1um.heatmap")
chl.tree <- read.tree("bact.arch.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("point22.max5.avg1.otu.csv",row.names=1,check.names=F)/6390)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('point22.5max.1avg.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("poin22.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("16S.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()



#5% AE bact/arch any single day or 1% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/1.5.point22.1um.heatmap")
chl.tree <- read.tree("bact.arch.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("1um.max5.avg1.otu.csv",row.names=1,check.names=F)/6390)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('1um.5max.1avg.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("1um.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("16S.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()

#5% 18S no dino or 1% on average

library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("~/Desktop/data.dots1.81315/heatmaps/18S.nodino.5percent.heatmap")
chl.tree <- read.tree("no.dino.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- read.csv("myDF.nodino.csv",row.names=1,check.names=F)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.18S.no.dino.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("18S with no Dinoflagellates", line = -2, font=12)
dev.off()
pdf("no.dino.18S.tree.pdf")
plot(chl.tree,cex=0.5)
add.scale.bar(length=0.2)
dev.off()
#5% 18S select dino or 1% on average

library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("~/Desktop/data.dots1.81315/heatmaps/18S.select.dino.5percent.heatmap")
chl.tree <- read.tree("select.dino.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- read.csv("myDF.selectdino.csv",row.names=1,check.names=F)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.18S.select.dino.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("18S with select Dinoflagellates", line = -2, font=12)
dev.off()
pdf("select.dino.18S.tree.pdf")
plot(chl.tree,cex=0.5)
add.scale.bar(length=0.2)
dev.off()

#5% 18S all dino or 1% on average

library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("~/Desktop/data.dots1.81315/heatmaps/18S.all.dino.5percent.heatmap")
chl.tree <- read.tree("all.dino.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- read.csv("myDF.alldino.csv",row.names=1,check.names=F)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.18S.all.dino.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("18S with all Dinoflagellates", line = -2, font=12)
dev.off()
pdf("all.18S.tree.pdf")
plot(chl.tree,cex=0.5)
add.scale.bar(length=0.2)
dev.off()






#2.5%  chloroplast any single day or 0.5% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.0.25.peak.0.5avg")
chl.tree <- read.tree("chl.tree") 
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("max2.5.avg0.5.otu.csv",row.names=1,check.names=F)/2284)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.2.5.percent.anyday.0.5.average.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("chl.2.5.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()




#2.5% point22 bact/arch any single day or 0.5% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/bact.arch.0.25.peak.0.5avg")
chl.tree <- read.tree("bact.arch.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("point22.max5.avg1.otu.no.mono.no.seculo.csv",row.names=1,check.names=F)/6390)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('point22.2.5max.0.5avg.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("poin22.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("16S.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()



#2.5% AE bact/arch any single day or 0.5% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/bact.arch.0.25.peak.0.5avg")
chl.tree <- read.tree("bact.arch.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("1um.max5.avg1.otu.noseculomonas.nomonomastix.csv",row.names=1,check.names=F)/6390)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('1um.2.5max.0.5avg.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("1um.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("16S.2.5.0.5.avg.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()







#############################################################################################################################################################################################
get rarified OTU tables for, MDS plots, Bray-Curtis dendrogram, bray-curtis distance decay and modify with unique/useful IDs
#############################################################################################################################################################################################
#note MDS plots, bray-curtis dendrograms didn't find their way into the paper.

use rarified tables:
biom convert -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b 
biom convert -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b 
biom convert -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt -b
sed 's/denovo/0.22_denovo/g' point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > 0.22_denovo_point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/denovo/1um_denovo/g' 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > 1um_denovo_1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/denovo/chl_denovo/g' rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > chl_denovo_rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt 


scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots &&
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots &&
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots


#delete top row of each.
#find/replcace in chl_, 1um_, 0.22_ to "denovo" on the OTU lines
#Added in Id's using vlookup from the attribute table, using PCA abbrev column.
#made the new OTU id columns the primary (only...) ID column
#transposed to new sheet
#delimited sample names by period
#concantenate month/day
#sort by month/day
#1um_chl only, sample curation: delete second 5/24 bc it appears to be in error, should be 5/25, but just deleted.
#1um_bact only, sample curation: delete second 5/24 bc it appears to be in error, should be 5/25, but just deleted.
#0.22_bact only, sample curation: average 3/17,3/18,3/22,3/23,3/24,5/21,7/1
#save as csv with file names
	1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.1515.csv
	point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.1515.csv
	rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.1515.csv




#############################################################################################################################################################################################
R commands for PCA
#didn't make it into the paper
#############################################################################################################################################################################################

INPUTS:
	point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom
	1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom
	rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom


biom convert -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv
biom convert -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom -o pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv
biom convert -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom -o pca.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt --table-type "OTU table" --to-tsv







tail -n +2 pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
tail -n +2 pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
tail -n +2 pca.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.pca.chl.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/den/0.22_den/g' rm.for.R.pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > 0.22.rm.for.R.pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/den/1um_den/g' rm.for.R.pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > 1um.rm.for.R.pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt
sed 's/den/chl_den/g' rm.for.R.pca.chl.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > chl.rm.for.R.pca.chl.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt


R
point22.table <- read.table("0.22.rm.for.R.pca.point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
onemicron.table <- read.table("1um.rm.for.R.pca.1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
chl.table <- read.table("chl.rm.for.R.pca.chl.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt",header=T,row.names=1,check.names=F)
prok.names <- read.table("vlookup.bact.arch",sep = "\t",row.names=1)
chl.names <- read.table("chl.vlookup",sep= "\t",row.names=1)
point22.test <- merge(point22.table,prok.names,by="row.names")
onemicron.test <- merge(onemicron.table,prok.names,by="row.names")
chl.test <- merge(chl.table,chl.names,by="row.names")
write.table(point22.test,"point22.pca",quote=F,sep=",")
write.table(onemicron.test,"1um.pca",quote=F,sep=",")
write.table(chl.test,"chl.pca",quote=F,sep=",")

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1um.pca /Users/dmneedham/Desktop/data.dots1.81315/pca


#did manual curation of spreadsheets, changing the sample IDs to dates, removing second 5/24 (mislabelled) and averaging samples in point22

library(vegan)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/pca")
point22 <- t(read.csv(as.matrix("point22.pca.csv"),header=TRUE,row.names=1))
point222 <- point22/6390
point223 <- sqrt(point222)
point22pca <- prcomp(point223)
scrs_x <- point22pca$x
scrs_x2 <- scrs_x[,1:2]


scrs_y <- point22pca$rotation
scrs_y2 <- point22pca$rotation[,1:2]
scrs_mod <- cbind(scrs_y2, NewCol1 = ifelse((abs(scrs_y2[,1]) < 0.15)&(abs(scrs_y2[,2]) < 0.15),NA,100))
scrsx_mod <- cbind(scrs_x2, NewCol1 = ifelse((abs(scrs_x2[,1]) < 0.15)&(abs(scrs_x2[,2]) < 0.15),NA,100))
scros_mod_2 <- scrs_mod[!is.na(scrs_mod[,3]),]
scrsx_mod_2 <- (scrsx_mod[!is.na(scrsx_mod[,3]),])*1


scros_mod_3 <- scros_mod_2[,1:2]
scros_mod_4 <- scros_mod_2*1
test1 <- list(scros_mod_4)
test2 <- list(scrsx_mod_2)
list.ABC <- c(test1, test2)
names(list.ABC) <- c("species","sites")
#use summary(point22pca) to get the proportion of variance
pdf("point22.pca.pdf")
par(mar=c(4,6,1,1))
ordipointlabel(list.ABC,  pch = c(20,18),display = c("sites","species"), col = c("gray48","black"), cex.lab=2, cex.axis= 2,cex = c(1.5,1.5), xlab="PC 1 (37.0% of Variance)", ylab="PC 2 (12.4% of Variance)")
panel.first=abline(h = 0, lty = "dotted", col="black")
panel.first=abline(v = 0, lty = "dotted", col="black")
box()
dev.off()

library(vegan)
onemicron <- t(read.csv(as.matrix("1um.pca.csv"),header=TRUE,row.names=1))
onemicron2 <- onemicron/6390
onemicron3 <- sqrt(onemicron2)
onemicronpca <- prcomp(onemicron3)
onemicron_x <- onemicronpca$x
onemicron_x2 <- onemicron_x[,1:2]
onemicron_y <- onemicronpca$rotation
onemicron_y2 <- onemicronpca$rotation[,1:2]
onemicron_mod <- cbind(onemicron_y2, onemicronCol1 = ifelse((abs(onemicron_y2[,1]) < 0.15)&(abs(onemicron_y2[,2]) < 0.15),NA,100))
onemicron_mod_2 <- onemicron_mod[!is.na(onemicron_mod[,3]),]
onemicron_mod_3 <- onemicron_mod_2[,1:2]
onemicron_mod_4 <- onemicron_mod_2*1
onemicron1 <- list(onemicron_mod_4)
onemicron2 <- list(onemicron_x2)
onemicron.ABC <- c(onemicron1, onemicron2)
names(onemicron.ABC) <- c("species","sites")
plot.new()
setEPS()
postscript("onemicron.pca.eps",width=5, height=5)
ordipointlabel(onemicron.ABC,pch = c(18,20), display = c("sites","species"), col = c("gray48","black"),cex = c(0.6,0.6), xlab="PC 1 (26.4% of Variance)", ylab="PC 2 (9.3% of Variance)")
panel.first=abline(h = 0, lty = "dotted", col="black")
panel.first=abline(v = 0, lty = "dotted", col="black")
box()
dev.off()
chl <- read.csv(as.matrix("chl.pca.csv"),header=TRUE,row.names=1)
chl2 <- chl/2284
chl3 <- sqrt(chl2)
chlpca <- prcomp(chl3)
chl_x <- chlpca$x
chl_x2 <- chl_x[,1:2]
chl_y <- chlpca$rotation
chl_y2 <- chlpca$rotation[,1:2]
chl_mod <- cbind(chl_y2, chlCol1 = ifelse((abs(chl_y2[,1]) < 0.15)&(abs(chl_y2[,2]) < 0.15),NA,100))
chl_mod_2 <- chl_mod[!is.na(chl_mod[,3]),]
chl_mod_3 <- chl_mod_2[,1:2]
chl_mod_4 <- chl_mod_2*1.5
chl1 <- list(chl_mod_4)
chl2 <- list(chl_x2)
chl.ABC <- c(chl1, chl2)
names(chl.ABC) <- c("species","sites")
plot.new()
setEPS()
postscript("chl.pca.eps",width=5, height=5)
ordipointlabel(chl.ABC, pch = c(20,18), xlim= c(-0.7,0.4),display = c("sites","species"), col = c("gray48","black"), cex = c(0.6,0.6), xlab="PC 1 (21.6% of Variance)", ylab="PC 2 (10.8% of Variance)")
panel.first=abline(h = 0, lty = "dotted", col="black")
panel.first=abline(v = 0, lty = "dotted", col="black")
box()
dev.off()
varonemicron <- onemicronpca$sdev^2/sum(onemicronpca$sdev^2)
varonemicron1 <- as.matrix(varonemicron)
varonemicron2 <- varonemicron1[c(1:10),]
varpoint22 <- point22pca$sdev^2/sum(point22pca$sdev^2)
varpoint221 <- as.matrix(varpoint22)
varpoint222 <- varpoint221[c(1:10),]
varchl <- chlpca$sdev^2/sum(chlpca$sdev^2)
varchl1 <- as.matrix(varchl)
varchl2 <- varchl1[c(1:10),]
df.variances2 <- cbind(varonemicron2,varpoint222,varchl2)
plot.new()
setEPS()
postscript("scree.eps",width=5, height=5)
matplot(df.variances2, pch=16, col= 1:3, xlab = "Component", ylab = "Proportion of Variance", xaxt = "n")
matlines(df.variances2, pch=16, col= 1:3, xlab = "Component", ylab = "Proportion of Variance", xaxt = "n")
axis(1, at=1:10, labels= paste("PC",1:10))
dev.off()



#############################################################################################################################################################################################
R code for Bray-Curtis decay 
#############################################################################################################################################################################################

#convert days to Gregorian Days, in spreadsheets via Excel
INPUTS:
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots2 && 
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots2 &&
scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt /Users/dmneedham/Desktop/ae_dots2

#take the above and import into Excel
#point22
	#replicates extracted for further analysis and averaged for this one 3/17/11, 3/18/11, 3/22/11, 3/23/11, 3/24/11, 5/21/11, 7/1/11
	#transpose to make dates as the row names
#1um
	#deleted second 5/24 (erroneous label)
#chloroplast
	#deleted second 5/24 (erroneous label)
#converted all dates to excel data values, e.g., 39152 and transposed to a single column 	
require(vegan)
all.onemicron.days <- read.csv(as.matrix("decay.all.1um.dates.csv"),header=FALSE)
all.onemicron.comm <- read.csv(as.matrix("decay.all.1um.community.csv"),header=TRUE,row.names=1)
all.onemicron.days.dist <- dist(all.onemicron.days)
all.onemicron.days.dist.v <- as.vector(all.onemicron.days.dist)
all.onemicron.comm.percent <- all.onemicron.comm/6390
all.onemicron.comm.dist <- vegdist(all.onemicron.comm.percent, method = "bray")
all.onemicron.comm.dist.v <- as.vector(all.onemicron.comm.dist)
all.onemicron.comm.dist.v.sim <- 1-all.onemicron.comm.dist.v
march.onemicron.days <- read.csv(as.matrix("decay.march.1um.dates.csv"),header=FALSE)
march.onemicron.comm <- read.csv(as.matrix("decay.march.1um.community.csv"),header=TRUE,row.names=1)
march.onemicron.days.dist <- dist(march.onemicron.days)
march.onemicron.days.dist.v <- as.vector(march.onemicron.days.dist)
march.onemicron.comm.percent <- march.onemicron.comm/6390
march.onemicron.comm.dist <- vegdist(march.onemicron.comm.percent, method = "bray")
march.onemicron.comm.dist.v <- as.vector(march.onemicron.comm.dist)
march.onemicron.comm.dist.v.sim <- 1-march.onemicron.comm.dist.v
may.onemicron.days <- read.csv(as.matrix("decay.may.1um.dates.csv"),header=FALSE)
may.onemicron.comm <- read.csv(as.matrix("decay.may.1um.community.csv"),header=TRUE,row.names=1)
may.onemicron.days.dist <- dist(may.onemicron.days)
may.onemicron.days.dist.v <- as.vector(may.onemicron.days.dist)
may.onemicron.comm.percent <- may.onemicron.comm/6390
may.onemicron.comm.dist <- vegdist(may.onemicron.comm.percent, method = "bray")
may.onemicron.comm.dist.v <- as.vector(may.onemicron.comm.dist)
may.onemicron.comm.dist.v.sim <- 1-may.onemicron.comm.dist.v
all.point22.days <- read.csv(as.matrix("decay.all.point22.dates.csv"),header=FALSE)
all.point22.comm <- read.csv(as.matrix("decay.all.point22.community.csv"),header=TRUE,row.names=1)
all.point22.days.dist <- dist(all.point22.days)
all.point22.days.dist.v <- as.vector(all.point22.days.dist)
all.point22.comm.percent <- all.point22.comm/6390
all.point22.comm.dist <- vegdist(all.point22.comm.percent, method = "bray")
all.point22.comm.dist.v <- as.vector(all.point22.comm.dist)
all.point22.comm.dist.v.sim <- 1-all.point22.comm.dist.v
march.point22.days <- read.csv(as.matrix("decay.march.point22.dates.csv"),header=FALSE)
march.point22.comm <- read.csv(as.matrix("decay.march.point22.community.csv"),header=TRUE,row.names=1)
march.point22.days.dist <- dist(march.point22.days)
march.point22.days.dist.v <- as.vector(march.point22.days.dist)
march.point22.comm.percent <- march.point22.comm/6390
march.point22.comm.dist <- vegdist(march.point22.comm.percent, method = "bray")
march.point22.comm.dist.v <- as.vector(march.point22.comm.dist)
march.point22.comm.dist.v.sim <- 1-march.point22.comm.dist.v
may.point22.days <- read.csv(as.matrix("decay.may.point22.dates.csv"),header=FALSE)
may.point22.comm <- read.csv(as.matrix("decay.may.point22.community.csv"),header=TRUE,row.names=1)
may.point22.days.dist <- dist(may.point22.days)
may.point22.days.dist.v <- as.vector(may.point22.days.dist)
may.point22.comm.percent <- may.point22.comm/6390
may.point22.comm.dist <- vegdist(may.point22.comm.percent, method = "bray")
may.point22.comm.dist.v <- as.vector(may.point22.comm.dist)
may.point22.comm.dist.v.sim <- 1-may.point22.comm.dist.v
all.chl.days <- read.csv(as.matrix("decay.all.chl.dates.csv"),header=FALSE)
all.chl.comm <- read.csv(as.matrix("decay.all.chl.community.csv"),header=TRUE,row.names=1)
all.chl.days.dist <- dist(all.chl.days)
all.chl.days.dist.v <- as.vector(all.chl.days.dist)
all.chl.comm.percent <- all.chl.comm/6390
all.chl.comm.dist <- vegdist(all.chl.comm.percent, method = "bray")
all.chl.comm.dist.v <- as.vector(all.chl.comm.dist)
all.chl.comm.dist.v.sim <- 1-all.chl.comm.dist.v
march.chl.days <- read.csv(as.matrix("decay.march.chl.dates.csv"),header=FALSE)
march.chl.comm <- read.csv(as.matrix("decay.march.chl.community.csv"),header=TRUE,row.names=1)
march.chl.days.dist <- dist(march.chl.days)
march.chl.days.dist.v <- as.vector(march.chl.days.dist)
march.chl.comm.percent <- march.chl.comm/6390
march.chl.comm.dist <- vegdist(march.chl.comm.percent, method = "bray")
march.chl.comm.dist.v <- as.vector(march.chl.comm.dist)
march.chl.comm.dist.v.sim <- 1-march.chl.comm.dist.v
may.chl.days <- read.csv(as.matrix("decay.may.chl.dates.csv"),header=FALSE)
may.chl.comm <- read.csv(as.matrix("decay.may.chl.community.csv"),header=TRUE,row.names=1)
may.chl.days.dist <- dist(may.chl.days)
may.chl.days.dist.v <- as.vector(may.chl.days.dist)
may.chl.comm.percent <- may.chl.comm/6390
may.chl.comm.dist <- vegdist(may.chl.comm.percent, method = "bray")
may.chl.comm.dist.v <- as.vector(may.chl.comm.dist)
may.chl.comm.dist.v.sim <- 1-may.chl.comm.dist.v




#exponential models and prediction for mapping
all.onemicron.exponential.model <- lm(log(all.onemicron.comm.dist.v.sim) ~log(all.onemicron.days.dist.v))
all.onemicron.timevalues <- seq(1, 145, 1)
all.onemicron.exponential2 <- exp(predict(all.onemicron.exponential.model,list(all.onemicron.days.dist.v=all.onemicron.timevalues)))
march.onemicron.exponential.model <- lm(log(march.onemicron.comm.dist.v.sim) ~log(march.onemicron.days.dist.v))
march.onemicron.timevalues <- seq(1, 20, 1)
march.onemicron.exponential2 <- exp(predict(march.onemicron.exponential.model,list(march.onemicron.days.dist.v=march.onemicron.timevalues)))
may.onemicron.exponential.model <- lm(log(may.onemicron.comm.dist.v.sim) ~log(may.onemicron.days.dist.v))
may.onemicron.timevalues <- seq(1, 20, 1)
may.onemicron.exponential2 <- exp(predict(may.onemicron.exponential.model,list(may.onemicron.days.dist.v=may.onemicron.timevalues)))
all.point22.exponential.model <- lm(log(all.point22.comm.dist.v.sim) ~log(all.point22.days.dist.v))
all.point22.timevalues <- seq(1, 145, 1)
all.point22.exponential2 <- exp(predict(all.point22.exponential.model,list(all.point22.days.dist.v=all.point22.timevalues)))
march.point22.exponential.model <- lm(log(march.point22.comm.dist.v.sim) ~log( march.point22.days.dist.v))
march.point22.timevalues <- seq(1, 20, 1)
march.point22.exponential2 <- exp(predict(march.point22.exponential.model,list(march.point22.days.dist.v=march.point22.timevalues)))
may.point22.exponential.model <- lm(log(may.point22.comm.dist.v.sim) ~log( may.point22.days.dist.v))
may.point22.timevalues <- seq(1, 20, 1)
may.point22.exponential2 <- exp(predict(may.point22.exponential.model,list(may.point22.days.dist.v=may.point22.timevalues)))
all.chl.exponential.model <- lm(log(all.chl.comm.dist.v.sim) ~log( all.chl.days.dist.v))
all.chl.timevalues <- seq(1, 145, 1)
all.chl.exponential2 <- exp(predict(all.chl.exponential.model,list(all.chl.days.dist.v=all.chl.timevalues)))
march.chl.exponential.model <- lm(log(march.chl.comm.dist.v.sim) ~log( march.chl.days.dist.v))
march.chl.timevalues <- seq(1, 20, 1)
march.chl.exponential2 <- exp(predict(march.chl.exponential.model,list(march.chl.days.dist.v=march.chl.timevalues)))
may.chl.exponential.model <- lm(log(may.chl.comm.dist.v.sim) ~log( may.chl.days.dist.v))
may.chl.timevalues <- seq(1, 20, 1)
may.chl.exponential2 <- exp(predict(may.chl.exponential.model,list(may.chl.days.dist.v=may.chl.timevalues)))

#linear models full daily time-series 
march.onemicron.model.linear <- lm(march.onemicron.comm.dist.v.sim ~ march.onemicron.days.dist.v)
may.onemicron.model.linear <- lm(may.onemicron.comm.dist.v.sim ~ may.onemicron.days.dist.v)
all.onemicron.model.linear <- lm(all.onemicron.comm.dist.v.sim ~ all.onemicron.days.dist.v)
march.point22.model.linear <- lm(march.point22.comm.dist.v.sim ~ march.point22.days.dist.v)
may.point22.model.linear <- lm(may.point22.comm.dist.v.sim ~ may.point22.days.dist.v)
all.point22.model.linear <- lm(all.point22.comm.dist.v.sim ~ all.point22.days.dist.v)
march.chl.model.linear <- lm(march.chl.comm.dist.v.sim ~ march.chl.days.dist.v)
may.chl.model.linear <- lm(may.chl.comm.dist.v.sim ~ may.chl.days.dist.v)
all.chl.model.linear <- lm(all.chl.comm.dist.v.sim ~ all.chl.days.dist.v)


#full march/may day models and prediction for plotting

march.onemicron.model.linear <- lm(march.onemicron.comm.dist.v.sim ~ march.onemicron.days.dist.v)
march.onemicron.timevalues <- seq(1, 20, 1)
march.onemicron.linear2 <- predict(march.onemicron.model.linear,list(march.onemicron.days.dist.v=march.onemicron.timevalues))
march.point22.model.linear <- lm(march.point22.comm.dist.v.sim ~ march.point22.days.dist.v)
march.point22.timevalues <- seq(1, 20, 1)
march.point22.linear2 <- predict(march.point22.model.linear,list(march.point22.days.dist.v=march.point22.timevalues))
march.chl.model.linear <- lm(march.chl.comm.dist.v.sim ~ march.chl.days.dist.v)
march.chl.timevalues <- seq(1, 20, 1)
march.chl.linear2 <- predict(march.chl.model.linear,list(march.chl.days.dist.v=march.chl.timevalues))


may.onemicron.model.linear <- lm(may.onemicron.comm.dist.v.sim ~ may.onemicron.days.dist.v)
may.onemicron.timevalues <- seq(1, 11, 1)
may.onemicron.linear2 <- predict(may.onemicron.model.linear,list(may.onemicron.days.dist.v=may.onemicron.timevalues))
may.point22.model.linear <- lm(may.point22.comm.dist.v.sim ~ may.point22.days.dist.v)
may.point22.timevalues <- seq(1, 11, 1)
may.point22.linear2 <- predict(may.point22.model.linear,list(may.point22.days.dist.v=may.point22.timevalues))
may.chl.model.linear <- lm(may.chl.comm.dist.v.sim ~ may.chl.days.dist.v)
may.chl.timevalues <- seq(1, 11, 1)
may.chl.linear2 <- predict(may.chl.model.linear,list(may.chl.days.dist.v=may.chl.timevalues))

all.onemicron.model.linear <- lm(all.onemicron.comm.dist.v.sim ~ all.onemicron.days.dist.v)
all.onemicron.timevalues <- seq(1, 145, 1)
all.onemicron.linear2 <- predict(all.onemicron.model.linear,list(all.onemicron.days.dist.v=all.onemicron.timevalues))
all.point22.model.linear <- lm(all.point22.comm.dist.v.sim ~ all.point22.days.dist.v)
all.point22.timevalues <- seq(1, 145, 1)
all.point22.linear2 <- predict(all.point22.model.linear,list(all.point22.days.dist.v=all.point22.timevalues))
all.chl.model.linear <- lm(all.chl.comm.dist.v.sim ~ all.chl.days.dist.v)
all.chl.timevalues <- seq(1, 145, 1)
all.chl.linear2 <- predict(all.chl.model.linear,list(all.chl.days.dist.v=all.chl.timevalues))




#remove days greater than 11 for equal comparison

elevendays.march.onemicron.days.dist.v <- ifelse(march.onemicron.days.dist.v>11,NA,march.onemicron.days.dist.v)
elevendays.may.onemicron.days.dist.v <- ifelse(may.onemicron.days.dist.v>11,NA,may.onemicron.days.dist.v)
elevendays.march.point22.days.dist.v <- ifelse(march.point22.days.dist.v>11,NA,march.point22.days.dist.v)
elevendays.may.point22.days.dist.v <- ifelse(may.point22.days.dist.v>11,NA,may.point22.days.dist.v)
elevendays.march.chl.days.dist.v <- ifelse(march.chl.days.dist.v>11,NA,march.chl.days.dist.v)
elevendays.may.chl.days.dist.v <- ifelse(may.chl.days.dist.v>11,NA,may.chl.days.dist.v)

#linear models daily time-series, less than 11 days apart.

elevendays.march.onemicron.model.linear <- lm(march.onemicron.comm.dist.v.sim ~ elevendays.march.onemicron.days.dist.v)
elevendays.may.onemicron.model.linear <- lm(may.onemicron.comm.dist.v.sim ~ elevendays.may.onemicron.days.dist.v)
elevendays.march.point22.model.linear <- lm(march.point22.comm.dist.v.sim ~ elevendays.march.point22.days.dist.v)
elevendays.may.point22.model.linear <- lm(may.point22.comm.dist.v.sim ~ elevendays.may.point22.days.dist.v)
elevendays.march.chl.model.linear <- lm(march.chl.comm.dist.v.sim ~ elevendays.march.chl.days.dist.v)
elevendays.may.chl.model.linear <- lm(may.chl.comm.dist.v.sim ~ elevendays.may.chl.days.dist.v)


#11 day models and prediction for mapping

elevendays.march.onemicron.model.linear <- lm(march.onemicron.comm.dist.v.sim ~ elevendays.march.onemicron.days.dist.v)
elevendays.march.onemicron.timevalues <- seq(1, 11, 1)
elevendays.march.onemicron.linear2 <- predict(elevendays.march.onemicron.model.linear,list(elevendays.march.onemicron.days.dist.v=elevendays.march.onemicron.timevalues))
elevendays.march.point22.model.linear <- lm(march.point22.comm.dist.v.sim ~ elevendays.march.point22.days.dist.v)
elevendays.march.point22.timevalues <- seq(1, 11, 1)
elevendays.march.point22.linear2 <- predict(elevendays.march.point22.model.linear,list(elevendays.march.point22.days.dist.v=elevendays.march.point22.timevalues))
elevendays.march.chl.model.linear <- lm(march.chl.comm.dist.v.sim ~ elevendays.march.chl.days.dist.v)
elevendays.march.chl.timevalues <- seq(1, 11, 1)
elevendays.march.chl.linear2 <- predict(elevendays.march.chl.model.linear,list(elevendays.march.chl.days.dist.v=elevendays.march.chl.timevalues))


elevendays.may.onemicron.model.linear <- lm(may.onemicron.comm.dist.v.sim ~ elevendays.may.onemicron.days.dist.v)
elevendays.may.onemicron.timevalues <- seq(1, 11, 1)
elevendays.may.onemicron.linear2 <- predict(elevendays.may.onemicron.model.linear,list(elevendays.may.onemicron.days.dist.v=elevendays.may.onemicron.timevalues))
elevendays.may.point22.model.linear <- lm(may.point22.comm.dist.v.sim ~ elevendays.may.point22.days.dist.v)
elevendays.may.point22.timevalues <- seq(1, 11, 1)
elevendays.may.point22.linear2 <- predict(elevendays.may.point22.model.linear,list(elevendays.may.point22.days.dist.v=elevendays.may.point22.timevalues))
elevendays.may.chl.model.linear <- lm(may.chl.comm.dist.v.sim ~ elevendays.may.chl.days.dist.v)
elevendays.may.chl.timevalues <- seq(1, 11, 1)
elevendays.may.chl.linear2 <- predict(elevendays.may.chl.model.linear,list(elevendays.may.chl.days.dist.v=elevendays.may.chl.timevalues))





dev.new()
plot.new()
setEPS()
postscript("onemicron.short.eps",width=7.5, height=5)
march.onemicron.model.linear <- lm(march.onemicron.comm.dist.v.sim ~ march.onemicron.days.dist.v)
march.onemicron.timevalues <- seq(1, 20, 1)
march.onemicron.linear2 <- predict(march.onemicron.model.linear,list(march.onemicron.days.dist.v = march.onemicron.timevalues))
plot(march.onemicron.days.dist.v,march.onemicron.comm.dist.v.sim, , pin = c(2,2), col = "blue", cex= 0.9, pch = 6, ylim=c(0,1), xlim=c(0,20))
text(2,0.05,pos=4, col = "blue", paste0("March, 12 days apart only","\ny = ", round(elevendays.march.onemicron.model.linear$coefficients[2],4), "x + ", round(elevendays.march.onemicron.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.march.onemicron.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.march.onemicron.model.linear)$r.squared,3)))
text(13,0.05,pos=4, col = "blue", paste0("March, All daily","\ny = ", round(march.onemicron.model.linear$coefficients[2],4), "x + ", round(march.onemicron.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(march.onemicron.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(march.onemicron.model.linear)$r.squared,3)))
matlines(elevendays.march.onemicron.linear2, col = "blue")
matlines(march.onemicron.linear2, col = "blue")
points(may.onemicron.days.dist.v,may.onemicron.comm.dist.v.sim, col = "red", cex= 0.9, pch = 6, ylim=c(0,1), xlim=c(0,20))
text(2,0.85,pos=4,col = "red", paste0("May, All daily (12 days)","\ny = ", round(elevendays.may.onemicron.model.linear$coefficients[2],4), "x + ", round(elevendays.may.onemicron.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.may.onemicron.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.may.onemicron.model.linear)$r.squared,3)))
matlines(elevendays.may.onemicron.linear2, col = "red")
matlines(may.onemicron.linear2, col = "red")
dev.off()
plot.new()
setEPS()
postscript("point22.short.eps",width=7.5, height=5)
march.point22.model.linear <- lm(march.point22.comm.dist.v.sim ~ march.point22.days.dist.v)
march.point22.timevalues <- seq(1, 20, 1)
march.point22.linear2 <- predict(march.point22.model.linear,list(march.point22.days.dist.v = march.point22.timevalues))
plot(march.point22.days.dist.v,march.point22.comm.dist.v.sim, ,pch = 1, col = "blue", ylim=c(0,1), xlim=c(0,20))
text(2,0.05,pos=4, col = "blue", paste0("March, 12 days apart only","\ny = ", round(elevendays.march.point22.model.linear$coefficients[2],4), "x + ", round(elevendays.march.point22.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.march.point22.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.march.point22.model.linear)$r.squared,3)))
text(13,0.05, col = "blue", pos=4, paste0("March, All daily","\ny = ", round(march.point22.model.linear$coefficients[2],4), "x + ", round(march.point22.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(march.point22.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(march.point22.model.linear)$r.squared,3)))
matlines(elevendays.march.point22.linear2, col = "blue")
matlines(march.point22.linear2, col = "blue")
points(may.point22.days.dist.v,may.point22.comm.dist.v.sim, pch = 1, col = "red", ylim=c(0,1), xlim=c(0,20))
text(2,0.85,pos=4,col = "red", paste0("May, All daily (12 days)","\ny = ", round(elevendays.may.point22.model.linear$coefficients[2],4), "x + ", round(elevendays.may.point22.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.may.point22.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.may.point22.model.linear)$r.squared,3)))
matlines(elevendays.may.point22.linear2, col = "red")
matlines(may.point22.linear2, col = "red")
dev.off()
plot.new()
setEPS()
postscript("chl.short.eps",width=7.5, height=5)
march.chl.model.linear <- lm(march.chl.comm.dist.v.sim ~ march.chl.days.dist.v)
march.chl.timevalues <- seq(1, 20, 1)
march.chl.linear2 <- predict(march.chl.model.linear,list(march.chl.days.dist.v = march.chl.timevalues))
plot(march.chl.days.dist.v,march.chl.comm.dist.v.sim, col = "blue", cex= 0.9, pch = 5, ylim=c(0,1), xlim=c(0,20))
text(2,0.05,pos=4, col = "blue", paste0("March, 12 days apart only","\ny = ", round(elevendays.march.chl.model.linear$coefficients[2],4), "x + ", round(elevendays.march.chl.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.march.chl.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.march.chl.model.linear)$r.squared,3)))
text(13,0.05, col = "blue", pos=4, paste0("March, All daily","\ny = ", round(march.chl.model.linear$coefficients[2],4), "x + ", round(march.chl.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(march.chl.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(march.chl.model.linear)$r.squared,3)))
matlines(elevendays.march.chl.linear2, col = "blue")
matlines(march.chl.linear2, col = "blue")
points(may.chl.days.dist.v,may.chl.comm.dist.v.sim, col = "red", cex= 0.9, pch = 5, ylim=c(0,1), xlim=c(0,20))
text(2,0.85,pos=4,col = "red", paste0("May, All daily (12 days)","\ny = ", round(elevendays.may.chl.model.linear$coefficients[2],4), "x + ", round(elevendays.may.chl.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(elevendays.may.chl.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(elevendays.may.chl.model.linear)$r.squared,3)))
matlines(elevendays.may.chl.linear2, col = "red")
matlines(may.chl.linear2, col = "red")
dev.off()
plot.new()
setEPS()
postscript("onemicron.all.eps",width=7.5, height=5)
plot(all.onemicron.days.dist.v,all.onemicron.comm.dist.v.sim, col = "black", cex= 0.9, pch = 6, ylim=c(0,1), xlim=c(0,142))
matlines(all.onemicron.exponential2, lwd=2)
matlines(all.onemicron.linear2, col= "red")
text(80,0.85,pos=4,col = "red", paste0("All dates, Linear Model","\ny = ", round(all.onemicron.model.linear$coefficients[2],4), "x + ", round(all.onemicron.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(all.onemicron.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(all.onemicron.model.linear)$r.squared,3)))
dev.off()
plot.new()
setEPS()
postscript("point22.all.eps",width=7.5, height=5)
plot(all.point22.days.dist.v,all.point22.comm.dist.v.sim, col = "black", cex= 0.9, pch = 6, ylim=c(0,1), xlim=c(0,142))
matlines(all.point22.exponential2, lwd=2)
matlines(all.point22.linear2, col= "red")
text(80,0.85,pos=4,col = "red", paste0("All dates, Linear Model","\ny = ", round(all.point22.model.linear$coefficients[2],4), "x + ", round(all.point22.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(all.point22.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(all.point22.model.linear)$r.squared,3)))
dev.off()
plot.new()
setEPS()
postscript("chl.all.eps",width=7.5, height=5)
plot(all.chl.days.dist.v,all.chl.comm.dist.v.sim, col = "black", cex= 0.9, pch = 6, ylim=c(0,1), xlim=c(0,142))
matlines(all.chl.exponential2, lwd =2)
matlines(all.chl.linear2, col= "red")
text(80,0.85,pos=4,col = "red", paste0("All dates, Linear Model","\ny = ", round(all.chl.model.linear$coefficients[2],4), "x + ", round(all.chl.model.linear$coefficients[1],4),
	 "\np-value = ", signif(summary(all.chl.model.linear)$coefficients[2,4],3), 
	 "\nr2 = ", signif(summary(all.chl.model.linear)$r.squared,3)))
dev.off()






#############################################################################################################################################################################################
R commands for Mantel Tests
#############################################################################################################################################################################################

#samples that do not overlap were removed for this analysis. using same spreadsheets as for PCA but with the following thrown out o
#samples averaged:
	#1um_nomito: 2nd 5/24, appears to be 5/25 (makes sense)
	#chl: 2nd 5/24, appears to be 5/25 (makes sense)
	#point22: 3/17, 3/18, 3/22, 3/23, 3/24, 5/21, 7/1, 9/28	
	#deleted bc no overlap: 3/27, 3/28 (point22), 3/27(chl), 5/5 (chl,attached) 5/18(chl,attached), 5/19(chl,attached), 5/26(chl,attached), 7/20(point22), 7/14(onemicron,chl), 
	#mantel.all.1um.community.csv
	#mantel.all.chl.community.csv
	#mantel.all.point22.community.csv
	#mantel.dates.csv
	#used environmental spreadsheet from figure 1. but only used bottle_temp, bottle_chl, precipitation
	#used buoy temp on 3/29, 5/12, 6/9, 6/16, 7/26, 6/22
	#averaged chl for 5/23,5/25 for 5/24 and 6/9 and 7/1 for 6/16
	#the other parameters were too sparse or could have important variables missing like precipitation/wind missing for most of may daily so just deleted.
	#since everything correlates, significantly adding wvht in bc it should be pretty inconsequential? anyway, averged 4/15 from 4/6 and 4/20
#18S prep
R
table.selectdino <- read.table("for.r.tail.w.phototrophic.dino.pr2.pos.chl.combined.seqs.biom.txt",row.names=1,header=T,check.names=F)
test.selectdino <- as.data.frame(t(table.selectdino)/colSums(table.selectdino))
dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.selectdino.3.dates.nonsort <- merge(test.selectdino,dates,by="row.names")
write.table(file="selectdino.for.mantel",df.selectdino.3.dates.nonsort, quote=F,sep = ",")
R
table.nodino <- read.table("for.r.tail.n2.onemicron.neg.wout.dino.pos.chl.combined.seqs.biom.txt",row.names=1,header=T,check.names=F)
test.nodino <- as.data.frame(t(table.nodino)/colSums(table.nodino))
dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.nodino.3.dates.nonsort <- merge(test.nodino,dates,by="row.names")
write.table(file="nodino.for.mantel",df.nodino.3.dates.nonsort, quote=F,sep = ",")

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/nodino.for.mantel  /Users/dmneedham/Desktop/data.dots1.81315/mantel &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/selectdino.for.mantel  /Users/dmneedham/Desktop/data.dots1.81315/mantel


########R code for mantel tests
setwd("~/Desktop/data.dots1.81315/mantel")
library(vegan)
#read in data
onemicron.for.mantel<- read.csv(as.matrix("mantel.all.1um.community.8615.csv"),header=TRUE,row.names=1)
point22.for.mantel<- read.csv(as.matrix("mantel.all.point22.community.8715.csv"),header=TRUE,row.names=1)
chl.for.mantel<- read.csv(as.matrix("mantel.all.chl.community.8715.csv"),header=TRUE,row.names=1)
env.for.mantel <- read.csv(as.matrix("environ.params.mantel.wnut.8715.csv"),header=TRUE,row.names=1)
dates.for.mantel<- read.csv(as.matrix("mantel.dates.8715.csv"), header=F)
nodino.for.mantel <- read.csv(as.matrix("nodino.for.mantel.csv"),header=TRUE,row.names=1)
select.dinos.for.mantel <- read.csv(as.matrix("selectdino.for.mantel.csv"),header=TRUE,row.names=1)



#collect data for individual environmental parameters
chla.for.mantel <- env.for.mantel[1]
temp.for.mantel <- env.for.mantel[2]
wvht.for.mantel <- env.for.mantel[3]
po4.for.mantel <- env.for.mantel[4]
sio4.for.mantel <- env.for.mantel[5]
no2.no3.for.mantel <- env.for.mantel[6]
nutrients.for.mantel <- env.for.mantel[4:6]
env.for.mantel <- env.for.mantel[-7]

#calculate similarities
onemicron.bray <- vegdist(onemicron.for.mantel, method = "bray")
point22.bray <- vegdist(point22.for.mantel, method = "bray")
chl.bray <- vegdist(chl.for.mantel, method = "bray")
dino.bray <- vegdist(select.dinos.for.mantel, method = "bray")
nodino.bray <- vegdist(nodino.for.mantel, method = "bray")
env.bray <- dist(scale(env.for.mantel,center=TRUE,scale=TRUE))
chla.bray <- dist(scale(chla.for.mantel,center=TRUE,scale=TRUE))
temp.bray <- dist(scale(temp.for.mantel,center=TRUE,scale=TRUE))
wvht.bray <- dist(scale(wvht.for.mantel,center=TRUE,scale=TRUE))
po4.bray <- dist(scale(po4.for.mantel,center=TRUE,scale=TRUE))
sio4.bray <- dist(scale(sio4.for.mantel,center=TRUE,scale=TRUE))
no2.no3.bray <- dist(scale(no2.no3.for.mantel,center=TRUE,scale=TRUE))
nutrients.bray <- dist(scale(nutrients.for.mantel,center=TRUE,scale=TRUE))
dates.dist <- dist(scale(dates.for.mantel)



sims <- c("onemicron.bray","point22.bray","chl.bray","dino.bray","env.bray","chla.bray","temp.bray","wvht.bray","po4.bray","sio4.bray","no2.no3.bray","nutrients.bray","dates.dist","nodino.bray")

test <- combn(sims,2,simplify=F)

(See file named mantel.test.results.81015, for combination and commands to produce all permutations of data)



#############################################################################################################################################################################################
select OTUs that only occur in over 1/4 of the samples and over 0.1% on average for gg_only_chl and 0.22/1um bact for LSA
#############################################################################################################################################################################################

 
filter_otus_from_otu_table.py -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.001 -s 10 -o 1um.chl.dots1.forLSA.biom &&
filter_otus_from_otu_table.py -i point22.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.001 -s 10 -o point22.no.mitochl.dots1.forLSA.biom &&
filter_otus_from_otu_table.py -i 1um.rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --min_count_fraction 0.001  -s 10 -o 1um.no.mitochl.dots1.forLSA.biom &&
biom convert -i 1um.chl.dots1.forLSA.biom -o 1um.chl.dots1.forLSA.biom.txt -b &&
biom convert -i point22.no.mitochl.dots1.forLSA.biom -o point22.no.mitochl.dots1.forLSA.biom.txt -b &&
biom convert -i 1um.no.mitochl.dots1.forLSA.biom -o 1um.no.mitochl.dots1.forLSA.biom.txt -b &&
tail -n +2 point22.no.mitochl.dots1.forLSA.biom.txt > point22_lsa.txt
tail -n +2 1um.no.mitochl.dots1.forLSA.biom.txt > onemicron_lsa.txt
tail -n +2 1um.chl.dots1.forLSA.biom.txt > chl_lsa.txt
sed 's/denovo/0.22_denovo/g' point22_lsa.txt > point22_lsa2.txt &&
sed 's/denovo/1um_denovo/g' onemicron_lsa.txt > onemicron_lsa2.txt &&
sed 's/denovo/chl_denovo/g' chl_lsa.txt > chl_lsa2.txt
R
point22_lsa <- read.table("point22_lsa2.txt", header=T,row.names=1)/6390
onemicron_lsa <- read.table("onemicron_lsa2.txt",header=T,row.names=1)/6390
chl_lsa <- read.table("chl_lsa2.txt",header=T,row.names=1)/2284
point22_lsa_rowmeans <- cbind(point22_lsa, NewCol1 = rowMeans(point22_lsa))
point22_lsa_rowmeans.order <- point22_lsa_rowmeans[order(point22_lsa_rowmeans$"NewCol1",decreasing = TRUE),]
point22_lsa_rowmeans.order.top60 <- point22_lsa_rowmeans.order[1:60,]
onemicron_lsa_rowmeans <- cbind(onemicron_lsa, NewCol1 = rowMeans(onemicron_lsa))
onemicron_lsa_rowmeans.order <- onemicron_lsa_rowmeans[order(onemicron_lsa_rowmeans$"NewCol1",decreasing = TRUE),]
onemiron_lsa_rowmeans.order.top60 <- onemicron_lsa_rowmeans.order[1:60,]
chl_lsa_rowmeans <- cbind(chl_lsa, NewCol1 = rowMeans(chl_lsa))
chl_lsa_rowmeans.order <- chl_lsa_rowmeans[order(chl_lsa_rowmeans$"NewCol1",decreasing = TRUE),]
chl_lsa_rowmeans.order.top60 <- chl_lsa_rowmeans.order[1:60,]
write.table(chl_lsa_rowmeans.order.top60,"chl_lsa_rowmeans.order.top60.txt")
write.table(onemiron_lsa_rowmeans.order.top60,"onemicron_lsa_rowmeans.order.top60.txt")
write.table(point22_lsa_rowmeans.order.top60,"point22_lsa_rowmeans.order.top60.txt")


scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/*60.txt /Users/dmneedham/Desktop/ae_dots2
#open in excel, shift column headers 1 row to the right, delete average column (the last one)
#one.micron. delete 5/24#2, transpose and concatenate dates together.
#point22: average 3/17,3/18,3/22,3/23,3/24,7/1 delete9/28
#chl: delete 5/24, number2
#collected environmental data from various spreadsheets for consolidation in the LSA file, namely the Wrigley data was from the website and was generally downloaded as day averages. However, in a couple of cases, the data were not available in this form and were downloaded as 30 minute intervals which were then averaged for the daily, named 3/24, for example. The buoy data was averaged by day. 
#days that did not have data for all variables but did have for some were completed with na and extrapolate linear between adjacent sampling points
#relevant environmental data spreadsheets are dots1 counts and env81314, env_dots1_w_buoy_wrig_discrete_111814 and chl_david 
scp /Users/dmneedham/Desktop/ae_dots2/chl_onemicron.point22.lsa_rowmeans.order.top60.txt davidlsa@narsil.usc.edu:/home/davidlsa/12215
lsa_compute chl_onemicron.point22.lsa.march.txt chl_onemicron.point22.lsa.march.output.txt -s 21 -f linear -r 1 -m 75 -d 3 -p mix -x 1000 
lsa_compute chl_onemicron.point22.lsa.all.txt chl_onemicron.point22.lsa.all.output.txt -s 43 -f linear -r 1 -m 75 -d 0 -p mix -x 1000 
lsa_compute chl_onemicron.point22.lsa.march.txt chl_onemicron.point22.lsa.march.output.perm.txt -s 21 -f linear -r 1 -m 75 -d 3 -p perm -x 1000 
lsa_compute chl_onemicron.point22.lsa.all.txt chl_onemicron.point22.lsa.all.output.perm.txt -s 43 -f linear -r 1 -m 75 -d 0 -p perm -x 1000

scp davidlsa@narsil.usc.edu:/home/davidlsa/12215/chl_onemicron.point22.lsa.march.output.perm.txt /Users/dmneedham/Desktop/ae_dots2 
scp davidlsa@narsil.usc.edu:/home/davidlsa/12215/chl_onemicron.point22.lsa.all.output.perm.txt /Users/dmneedham/Desktop/ae_dots2 



#redo with new tax assigned euk data and new elsa installed by me 81915
scp /Users/dmneedham/Desktop/data.dots1.81315/LSA/chl_onemicron.point22.env.select.dino.lsa.march.82515.txt david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis &&
scp /Users/dmneedham/Desktop/data.dots1.81315/LSA/chl_onemicron.point22.env.select.dino.lsa.all.82515.txt david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis


nohup python charade-elsa-08453d57609c/lsa/lsa_compute.py chl_onemicron.point22.env.select.dino.lsa.all.82515.txt chl_onemicron.point22.env.select.dino.lsa.all.82515.txt.x500.output -p mix -x 500 -d 0 -s 43 &
nohup python charade-elsa-08453d57609c/lsa/lsa_compute.py chl_onemicron.point22.env.select.dino.lsa.all.82515.txt chl_onemicron.point22.env.select.dino.lsa.all.82515.txt.x1000.output  -p mix -x 1000 -d 0 -s 43 &
nohup python charade-elsa-08453d57609c/lsa/lsa_compute.py chl_onemicron.point22.env.select.dino.lsa.march.82515.txt chl_onemicron.point22.env.select.dino.lsa.march.82515.txt.x500.output -p mix -x 500 -d 3 -f linear -s 20 &
nohup python charade-elsa-08453d57609c/lsa/lsa_compute.py chl_onemicron.point22.env.select.dino.lsa.march.82515.txt chl_onemicron.point22.env.select.dino.lsa.march.82515.txt.x1000.output  -p mix -x 1000 -d 3 -f linear -s 20 &


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_onemicron.point22.env.select.dino.lsa.march.82515.txt.x1000.output /Users/dmneedham/Desktop/data.dots1.81315/LSA &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl_onemicron.point22.env.select.dino.lsa.all.82515.txt.x1000.output /Users/dmneedham/Desktop/data.dots1.81315/LSA


#############################################################################################################################################################################################
add in Mock communities and insilico and test, did not make final paper
#############################################################################################################################################################################################


#select mocks from rarified OTU tables, clustered with samples
filter_samples_from_otu_table.py -i rarified_no.singletons_no.mito.chl_gg_chimeras_removed_dots1_otus.txt.biom --sample_id_fp even.stag.silico.samples -o rarified.even.stag.comm.silico.biom
biom convert -i rarified.even.stag.comm.silico.biom -o rarified.even.stag.comm.silico.biom.txt -b

scp david@narsil.usc.edu:/korriban/david/diatom_bloom_tag_analysis/even.stag.comm.silico.biom.txt /Users/dmneedham/Desktop/ae_dots2 

#Taxa renamed via vlookup and the node attribute table to silva abbrev 

#import to R
mock_table <- read.csv(("even.stag.comm.silico.biom_names.csv"),header=TRUE,row.names=1)
mock_table.m <- as.matrix(mock_table)
even <- mock_table.m[,2:8]
even.avg.trim <- even[even[,2]>0.0004,]
t.even.subset <- t(even.avg.trim) 
colours <- c("red", gray.colors(7))
par(mar=c(10,4.1,3,2.1))
barplot(t.even.subset,beside=TRUE, space = c(0,2), cex.names=0.8, las=2, col = colours, legend = rownames(t.even.subset),"topright")



#stag_community figure generation
stag <- mock_table[,9:15]
stag.df.sort <- stag[order(stag$"Stag_Input", stag$"Stag_Average",decreasing = TRUE),]
stag.avg.trim <- stag.df.sort[stag.df.sort[,2]>0.0001,]
stag.avg.trim.m <- as.matrix(stag.avg.trim)
stag.avg.trim.m.t <- t(stag.avg.trim.m)
plus.stag.avg.trim.m.t <- (stag.avg.trim.m.t) + 0.0001
stag.avg.trim.m.t.samples <- plus.stag.avg.trim.m.t[3:7,]
stag_stdev <- apply(stag.avg.trim.m.t.samples,2,sd)
colours <- c("209", "234")
bp.stag <- barplot(stag.avg.trim.m.t.samples[1:2,1:25],beside=TRUE)
pdf("stag.major.pdf")
par(mar=c(10,4.1,6,2.1))
barplot(plus.stag.avg.trim.m.t[1:2,1:25],beside=TRUE, cex.names=0.8, las=2, col = colours, log='y', ylim= c(0.0001,0.5))
arrows(bp.stag[2,],plus.stag.avg.trim.m.t[2,1:25]-stag_stdev, bp.stag[2,],plus.stag.avg.trim.m.t[2,1:25]+stag_stdev, length=0, angle=0)
dev.off()
pdf("stag.minor.pdf")
par(pin = c(4,1))
barplot(plus.stag.avg.trim.m.t[2,26:38], las =2, col = "234", cex.names = 0.6, cex.axis=0.6, width=0.5, xlim=c(0,9), log = 'y')
dev.off()
#even_community figure generation
even <- mock_table[,1:8]
even.df.sort <- even[order(even$"Even_Average", decreasing = TRUE),]
even.avg.trim <- even.df.sort[even.df.sort$"Even_Average">0.0004,]
even.avg.trim.m <- as.matrix(even.avg.trim)
even.avg.trim.m.t <- t(even.avg.trim.m)
even.avg.trim.m.t.samples <- even.avg.trim.m.t[3:8,]
even_stdev <- apply(even.avg.trim.m.t.samples,2,sd)
colours <- c("209", "234")
bp <- barplot(even.avg.trim.m.t[1:2,1:19],beside=TRUE)
pdf("even.major.2pdf")
par(mar=c(10,4.1,6,2.1))
barplot(even.avg.trim.m.t[1:2,1:10],beside=TRUE, las =2, ylim= c(0,0.23), col =  colours, legend = rownames(even.avg.trim.m.t[1:2,]))
arrows(bp[2,1:10],even.avg.trim.m.t[2,1:10]-even_stdev, bp[2,1:10],even.avg.trim.m.t[2,1:10]+even_stdev, length=0, angle=0)
dev.off()
pdf("even.minor.pdf")
par(pin = c(4,1))
barplot(even.avg.trim.m.t[2,11:19],beside=TRUE, las =2, ylim= c(0,0.005), col = "234", cex.names = 0.6, cex.axis=0.6, width=0.5, xlim=c(0,9))
dev.off()

#stag calculate average percent mean average off
stag <- mock_table[,9:15]
stag.df.sort <- stag[order(stag$"Stag_Input", stag$"Stag_Average",decreasing = TRUE),]
stag.df.sort.top25 <- stag.df.sort[1:25,1:2]
differences.stag <- abs(stag.df.sort.top25[1] - stag.df.sort.top25[2])
fraction.change.stag <- (differences.stag/stag.df.sort.top25[1])*100
colMeans(fraction.change.stag)
sapply(fraction.change.stag,sd)


even <- mock_table[,1:8]
even.df.sort <- even[order(even$"Even_Input", even$"Even_Average",decreasing = TRUE),]
even.df.sort.top10 <- even.df.sort[1:10,1:2]
differences.even <- abs(even.df.sort.top10[1] - even.df.sort.top10[2])
fraction.change.even <- (differences.even/even.df.sort.top10[1])*100
colMeans(fraction.change.even)
sapply(fraction.change.even,sd)


#for bray-curtis similarity of replicates
mock_table <- read.csv(("even.stag.comm.silico.biom_names.csv"),header=TRUE,row.names=1)
mock_table.m <- as.matrix(t(mock_table))
library(vegan)
even.reps <- mock_table.m[3:8,]
even.reps.no.all.zero <- even.reps[, colSums(even.reps != 0) > 0]
even.reps.bc <- vegdist(even.reps.no.all.zero,method="bray")
even.sim <- 1-even.reps.bc 
even.sim.vect <- as.vector(even.sim)
mean(even.sim.vect)
sd(even.sim.vect)
stag.reps <- mock_table.m[11:15,]
stag.reps.no.all.zero <- stag.reps[, colSums(stag.reps != 0) > 0]
stag.reps.bc <- vegdist(stag.reps.no.all.zero,method="bray")
stag.sim <- 1-stag.reps.bc 
stag.sim.vect <- as.vector(stag.sim)
mean(stag.sim.vect)
sd(stag.sim.vect)

#calulcaint the percent of spurious OTUS in even and staggered
stag <- mock_table[,9:15]
stag.df.sort <- stag[order(stag$"Stag_Input", stag$"Stag_Average",decreasing = TRUE),]
stag.df.sort.spurious <- stag.df.sort[26:26349,3:7]
spurious.stag <- colSums(stag.df.sort.spurious)
even <- mock_table[,1:8]
even.df.sort <- even[order(even$"Even_Input", even$"Even_Average",decreasing = TRUE),]
even.df.sort.spurious <- even.df.sort[11:26349,3:8]
spurious.even <- colSums(even.df.sort.spurious)




#############################################################################################################################################################################################
Environmental Parameters, figure generation
#############################################################################################################################################################################################


###################NEW ENVIRONMENTAL PARAMS

setwd("~/Desktop/data.dots1.81315/lines.plot")
environ <- read.csv("environ.params.w.nuts.82315.csv",header=FALSE,row.names=1,na.strings="")
environ.t <- t(environ)
df.environ.t <- as.data.frame(environ.t)
df.environ.t$date <- as.Date(as.character(df.environ.t$date))
df.environ.t$WVHT <- as.numeric(as.character(df.environ.t$WVHT))
df.environ.t$WTMP <- as.numeric(as.character(df.environ.t$WTMP))
df.environ.t$TemperatureAvgC <- as.numeric(as.character(df.environ.t$TemperatureAvgC))
df.environ.t$WindSpeedAvgkmPH <- as.numeric(as.character(df.environ.t$WindSpeedAvgkmPH))
df.environ.t$PrecipitationSumcm <- as.numeric(as.character(df.environ.t$PrecipitationSumcm))
df.environ.t$bottle_chl <- as.numeric(as.character(df.environ.t$bottle_chl))
df.environ.t$bottle_temp <- as.numeric(as.character(df.environ.t$bottle_temp))
df.environ.t$no2.no3 <- as.numeric(as.character(df.environ.t$no2.no3))
df.environ.t$po4 <- as.numeric(as.character(df.environ.t$po4))
df.environ.t$sio4 <- as.numeric(as.character(df.environ.t$sio4))


s <- complete.cases(df.environ.t$date,df.environ.t$bottle_chl)
cordx.all <- df.environ.t$date[s]
cordy.all <- df.environ.t$bottle_chl[s]

#pdf("env.nuts.lines.pdf",width=8, height=11)
par(mfrow=c(4,1))
par(mar=c(0.25,10,1,10)+0.1)
plot(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='gray',type='l',xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(as.Date("2011-03-01"),as.Date("2011-08-15")))
polygon(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='lightgray', border='lightgray')
axis(4, col='gray',las=2,cex.axis=1.5)
mtext("Chlorophyll (µg/L)",side=4,line=3, col='black',cex=1)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$bottle_temp, ylim=c(10,22), col = "black",xaxt='n',las=2,xlab="",ylab="",yaxt="n",pch=1)
lines(df.environ.t$date,df.environ.t$WTMP,xaxt='n',xaxt='n',las=2,xlab="",ylab="",yaxt='n')
mtext("Water temperature", side=2,line=2.5, cex=1) 
axis(2,las=2,cex.axis=1.5)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$PrecipitationSumcm, col = "blue", type= 'l',xaxt="n",yaxt="n",xlab="",ylab="", ylim=c(0,10))
axis(4, col='blue',las=2,cex.axis=1.5,line=5)
mtext("Rain (cm)", side=4, line=8, cex=1)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$WindSpeedAvgkmPH,xaxt="n",yaxt="n",xlab="",ylab="", ylim=c(0,100),type='l', col='orange',cex=1.5)
axis(side=2,line=5, ,las=2,col='orange',las=2,cex.axis=1)
mtext(side=2,line=8.5,"Average Wind Speed (km/hr)", col='orange',cex=0.75)
at = format(df.environ.t$date,"%d") %in% c('05','10','15','20','25','30')
axis(side=1,at=df.environ.t$date[ at ], labels=F,las=2, xlab="")

par(mar=c(0.25,10,1,10)+0.1)
plot(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='gray',type='l',xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(as.Date("2011-03-01"),as.Date("2011-08-15")))
polygon(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='lightgray', border='lightgray')
axis(4, col='black',cex.axis=2,las=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=1)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$sio4,col = "darkgreen",xaxt='n',type='o',pch=5,xaxt="n",yaxt="n",xlab="",ylab="")
axis(2,las=2,cex.axis=1.5)
axis(side=1,at=df.environ.t$date[ at ], labels=F,las=2, xlab="")
mtext("Silicate (µm)", side=2,line=4, cex=1.25)



par(mar=c(0.25,10,1,10)+0.1)
plot(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='gray',las=2, type='l',xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(as.Date("2011-03-01"),as.Date("2011-08-15")))
polygon(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='lightgray', border='lightgray')
axis(4, col='black',cex.axis=2,las=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=1)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$po4,col = "darkred",xaxt='n',type='o',pch=5,xaxt="n",yaxt="n",xlab="",ylab="",las=2)
axis(2,las=2,cex.axis=1.5)
mtext("Phosphate (µm)", side=2,line=4,cex=1.25)
axis(side=1,at=df.environ.t$date[ at ], labels=F,las=2, xlab="")

par(mar=c(3,10,1,10)+0.1)
plot(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='gray',type='l',xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(as.Date("2011-03-01"),as.Date("2011-08-15")))
polygon(c(cordx.all[1],cordx.all,cordx.all[40]), c(0,cordy.all,0), col='lightgray', border='lightgray')
axis(4, col='black',cex.axis=2,las=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=1)
par(new=TRUE)
plot(df.environ.t$date,df.environ.t$no2.no3,col = "darkblue",xaxt='n',type='o',pch=5,xaxt="n",yaxt="n",xlab="",ylab="")
axis(2,las=2,cex.axis=1.5)
mtext("NO2+NO3 (µm)", side=2,line=4,cex=1.25)
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2)
dev.off()

#1µm chloroplast lineplot, march dominant

setwd("~/Desktop/data.dots1.81315/lines.plot")
plot.new()
pdf("chl.march.lineplot.3.pdf",width=10, height=5)
chl.tree_matrix <- read.csv("chl.heatmap.matrix.lineplot.81715.csv",row.names=1,check.names=F,header=F)
chl.tree_matrix.t <- t(chl.tree_matrix)
df.chl.tree_matrix.t <- as.data.frame(chl.tree_matrix.t)
df.chl.tree_matrix.t$date <- as.Date(as.character(df.chl.tree_matrix.t$date))
df.chl.tree_matrix.t[2:57] <- lapply(df.chl.tree_matrix.t[2:57], as.character)
df.chl.tree_matrix.t[2:57] <- lapply(df.chl.tree_matrix.t[2:57], as.numeric)
df.chl.tree_matrix.t[2:57] <- df.chl.tree_matrix.t[2:57]/2284
highest.chl <- colnames(df.chl.tree_matrix.t)[apply(df.chl.tree_matrix.t, 1, which.max)]
highest.chl.march <- highest.chl[1:14]
unique.chl <- unique(unlist(highest.chl.march))
unique.chl.otus <- (df.chl.tree_matrix.t[,unique.chl])/2284
dates.chl.otus <- merge(df.chl.tree_matrix.t$date,unique.chl.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
cordy <- df.environ.t$bottle_chl[s]
cordy <- cordy[1:16]
par(mar=c(5,8,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n",ylab="",xlab="",yaxt="n") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray') 
axis(4,las=2,cex.axis=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=2)
par(new=TRUE)
plot(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Pseudo-nitzschia a"[1:14], type= 'o', col = 'darkgreen',xaxt="n",yaxt="n",xlab="",ylab="",pch=0)
axis(2,las=2,cex.axis=2)
mtext("Fraction of Chloroplast 16S",side=2,line=4,cex=2)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Pseudo-nitzschia c"[1:14], col = 'blue', type= 'o',pch=1)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Tetraselmis a"[1:14], col = 'red',type= 'o',pch=2)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Pseudo-nitzschia b"[1:14], col = 'brown',type= 'o',pch=3)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Heterosigma a"[1:14], col = 'magenta',type= 'o',pch=4)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Chaetoceros a"[1:14], col = 'orange',type= 'o',pch=5)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Ostreococcus a" [1:14], col = 'purple',type= 'o',pch=6)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Phaeocystis b"[1:14], col = 'darksalmon',type= 'o',pch=15)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Imantonia a"[1:14], col = 'darkcyan',type= 'o',pch=16)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Chrysochromulina a"[1:14], col = 'darkblue',type= 'o',pch=17)
legend('topright',colnames(unique.chl.otus),lty=1,col=c('darkgreen','blue','red','brown','magenta','orange','purple','darksalmon','black','darkblue'))
at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2,xlab="",ylab="")
dev.off()

#1µm lineplot, march dominant

plot.new()
setwd("~/Desktop/data.dots1.81315/lines.plot")
pdf("1um.march.lineplot.2.pdf",width=10, height=5)
onemicron.tree_matrix <- read.csv("onemicron.heatmap.matrix.lineplot.81715.csv",row.names=1,check.names=F,header=F)
onemicron.tree_matrix.t <- t(onemicron.tree_matrix)
df.onemicron.tree_matrix.t <- as.data.frame(onemicron.tree_matrix.t)
df.onemicron.tree_matrix.t$date <- as.Date(as.character(df.onemicron.tree_matrix.t$date))
df.onemicron.tree_matrix.t[2:68] <- lapply(df.onemicron.tree_matrix.t[2:57], as.character)
df.onemicron.tree_matrix.t[2:68] <- lapply(df.onemicron.tree_matrix.t[2:57], as.numeric)
df.onemicron.tree_matrix.t[2:68] <- df.onemicron.tree_matrix.t[2:57]/6390
highest.onemicron <- colnames(df.onemicron.tree_matrix.t)[apply(df.onemicron.tree_matrix.t, 1, which.max)]
#highest.onemicron.march <- highest.onemicron[1:14]
unique.onemicron <- unique(unlist(highest.onemicron.march))
unique.onemicron.otus <- (df.onemicron.tree_matrix.t[,unique.onemicron])/6380
dates.onemicron.otus <- merge(df.onemicron.tree_matrix.t$date,unique.onemicron.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
cordy <- cordy[1:16]
par(mar=c(5,8,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n",ylab="",xlab="",yaxt="n") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray') 
axis(4,las=2,cex.axis=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=2)
par(new=TRUE)
plot(df.chl.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"Persicirhabdus a"[1:14], type= 'o', col = 'darkgreen',xaxt="n",yaxt="n",xlab="",ylab="",ylim=c(0,0.35),pch=0)
axis(2,las=2,cex.axis=2)
mtext("Fraction of Prokaryotic 16S",side=2,line=4.5,cex=2)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"Fluviicola b"[1:14], col = 'blue', type= 'o',pch=1)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"Flavob b" [1:14], col = 'red',type= 'o',pch=2)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"Polaribacter a" [1:14], col = 'magenta',type= 'o',pch=3)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"MGII a"[1:14], col = 'darkred',type= 'o',pch=4)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"SAR11_S1 a"[1:14], col = 'orange',type= 'o',pch=5)
lines(df.onemicron.tree_matrix.t$date[1:14],df.onemicron.tree_matrix.t$"Formosa c"[1:14], col = 'purple',type= 'o',pch=6)
legend('topright',colnames(unique.onemicron.otus),lty=1,col=c('darkgreen','blue','red','magenta','darkred','orange','purple'))
at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2)
dev.off()

#0.22 lineplot, march dominant
setwd("~/Desktop/data.dots1.81315/lines.plot")
plot.new()
pdf("0.22.march.lineplot.2.pdf",width=10, height=5)
point22.tree_matrix <- read.csv("point22.heatmap.matrix.lineplot.81715.csv",row.names=1,check.names=F,header=F)
point22.tree_matrix.t <- t(point22.tree_matrix)
df.point22.tree_matrix.t <- as.data.frame(point22.tree_matrix.t)
df.point22.tree_matrix.t$date <- as.Date(as.character(df.point22.tree_matrix.t$date))
df.point22.tree_matrix.t[2:68] <- lapply(df.point22.tree_matrix.t[2:57], as.character)
df.point22.tree_matrix.t[2:68] <- lapply(df.point22.tree_matrix.t[2:57], as.numeric)
df.point22.tree_matrix.t[2:68] <- df.point22.tree_matrix.t[2:57]/6390
highest.point22 <- colnames(df.point22.tree_matrix.t)[apply(df.point22.tree_matrix.t, 1, which.max)]
highest.point22.march <- highest.point22[1:14]
unique.point22 <- unique(unlist(highest.point22.march))
unique.point22.otus <- (df.point22.tree_matrix.t[,unique.point22])/6380
dates.point22.otus <- merge(df.point22.tree_matrix.t$date,unique.point22.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
par(mar=c(5,8,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n",ylab="",yaxt="n",xlab="") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray') 
axis(4,las=2,cex.axis=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=2)
par(new=TRUE)
plot(df.point22.tree_matrix.t$date[1:16],df.point22.tree_matrix.t$"Flavob a"[1:16], col = 'darkblue', type= 'o',xaxt="n",yaxt="n",xlab="",ylab="",ylim=c(0,0.32),pch=15)
axis(2,las=2,cex.axis=2)
mtext("Fraction of Prokaryotic 16S",side=2,line=4.5,cex=2)
lines(df.point22.tree_matrix.t$date[1:16],df.point22.tree_matrix.t$"SAR92 a"[1:16], col = 'green',type= 'o',pch=16)
lines(df.point22.tree_matrix.t$date[1:16],df.point22.tree_matrix.t$"MGII a"[1:16], col = 'darkred',type= 'o',pch=4)
lines(df.point22.tree_matrix.t$date[1:16],df.point22.tree_matrix.t$"SAR11_S1 a"[1:16], col = 'orange',type= 'o',pch=5)
legend('topright',colnames(unique.point22.otus),lty=1,col=c('orange','darkblue','green','darkred'))
at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2)

dev.off()



legend('topright',colnames(unique.chl.otus),lty=1,col=c('darkgreen','blue','red','brown','magenta','orange','purple','darksalmon','black','darkblue'))
at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2,xlab="",ylab="")



#no.dino
setwd("~/Desktop/data.dots1.81315/lines.plot")
plot.new()
pdf("nodino.18S.march.lineplot.2.pdf",width=10, height=5)
chl.tree_matrix <- read.csv("myDF.nodino.csv",row.names=1,check.names=F,header=F)
chl.tree_matrix.t <- t(chl.tree_matrix)
df.chl.tree_matrix.t <- as.data.frame(chl.tree_matrix.t)
df.chl.tree_matrix.t$date <- as.Date(as.character(df.chl.tree_matrix.t$date))
df.chl.tree_matrix.t[2:35] <- lapply(df.chl.tree_matrix.t[2:35], as.character)
df.chl.tree_matrix.t[2:35] <- lapply(df.chl.tree_matrix.t[2:35], as.numeric)
df.chl.tree_matrix.t[2:35] <- df.chl.tree_matrix.t[2:35]
highest.chl <- colnames(df.chl.tree_matrix.t)[apply(df.chl.tree_matrix.t, 1, which.max)]
highest.chl.march <- highest.chl[1:14]
unique.chl <- unique(unlist(highest.chl.march))
unique.chl.otus <- df.chl.tree_matrix.t[,unique.chl]
dates.chl.otus <- merge(df.chl.tree_matrix.t$date,unique.chl.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
cordy <- df.environ.t$bottle_chl[s]
cordy <- cordy[1:16]
par(mar=c(5,4,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n",ylab="",yaxt="n",xlab="") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray') 
axis(4,las=2,cex.axis=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=2)
par(new=TRUE)
plot(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Pseudo-nitzschia_australis_a" [1:14], type= 'o', col = 'darkgreen',xaxt="n",yaxt="n",xlab="",ylab="",ylim=c(0,0.4),pch=1)
axis(2,las=2,cex.axis=2)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Tetraselmis_astigmatica_a" [1:14], col = 'blue',type= 'o',pch=2)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Emiliania_huxleyi_CCMP1516_a"[1:14], col = 'red',type= 'o',pch=3)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Heterosigma_akashiwo_a"[1:14], col = 'brown',type= 'o',pch=4)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Chaetoceros_sp._a"[1:14], col = 'magenta',type= 'o',pch=5)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Ostreococcus_sp._cult-29_a"[1:14], col = 'orange',type= 'o',pch=6)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Phaeocystis_sp._a"[1:14], col = 'purple',type= 'o',pch=15)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Phaeocystis_globosa_a"[1:14], col = 'darksalmon',type= 'o',pch=16)
lines(df.chl.tree_matrix.t$date[1:14],df.chl.tree_matrix.t$"Guinardia_striata_a"[1:14], col = 'darkblue',type= 'o',pch=17)

legend("topright",colnames(unique.chl.otus),lty=1,col=c('darkgreen','blue','red','brown','magenta','orange','purple','darksalmon','darkblue'),cex=0.75)


at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2,xlab="",ylab="")


dev.off()


#select.dino
plot.new()
setwd("~/Desktop/data.dots1.81315/lines.plot")
pdf("selectdino.18S.march.lineplot.2.pdf",width=10, height=5)
select.chl.tree_matrix <- read.csv("myDF.selectdino.csv",row.names=1,check.names=F,header=F)
select.chl.tree_matrix.t <- t(select.chl.tree_matrix)
df.select.chl.tree_matrix.t <- as.data.frame(select.chl.tree_matrix.t)
df.select.chl.tree_matrix.t$date <- as.Date(as.character(df.select.chl.tree_matrix.t$date))
df.select.chl.tree_matrix.t[2:40] <- lapply(df.select.chl.tree_matrix.t[2:40], as.character)
df.select.chl.tree_matrix.t[2:40] <- lapply(df.select.chl.tree_matrix.t[2:40], as.numeric)
df.select.chl.tree_matrix.t[2:40] <- df.select.chl.tree_matrix.t[2:40]
highest.select.chl <- colnames(df.select.chl.tree_matrix.t)[apply(df.select.chl.tree_matrix.t, 1, which.max)]
highest.select.chl.march <- highest.select.chl[1:14]
unique.select.chl <- unique(unlist(highest.select.chl.march))
test.select <- unique(cbind(c(unique.chl,unique.select.chl)))
unique.select.chl.otus <- df.select.chl.tree_matrix.t[,test.select]
dates.select.chl.otus <- merge(df.select.chl.tree_matrix.t$date,unique.select.chl.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
cordy <- df.environ.t$bottle_chl[s]
cordy <- cordy[1:16]
par(mar=c(5,8,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n",ylab="",yaxt="n",xlab="") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray') 
axis(4,las=2,cex.axis=2)
mtext("Chlorophyll (µg/L)",side=4,line=4, col='black',cex=2)
par(new=TRUE)
plot(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Pseudo-nitzschia_australis_a"[1:14], type= 'o', col = 'darkgreen',xaxt="n",yaxt="n",xlab="",ylab="",pch=1)
axis(2,las=2,cex.axis=2)
mtext("Fraction of Known Photosynthetic Eukaryotic 18S rDNA",side=2,line=4,cex=1)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Tetraselmis_astigmatica_a"[1:14], col = 'blue',type= 'o',pch=2)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Emiliania_huxleyi_CCMP1516_a"[1:14], col = 'red',type= 'o',pch=3)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Heterosigma_akashiwo_a"[1:14], col = 'brown',type= 'o',pch=4)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Chaetoceros_sp._a"[1:14], col = 'magenta',type= 'o',pch=5)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Ostreococcus_sp._cult-29_a"[1:14], col = 'orange',type= 'o',pch=6)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Phaeocystis_sp._a" [1:14], col = 'purple',type= 'o',pch=15)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Phaeocystis_globosa_a"[1:14], col = 'darksalmon',type= 'o',pch=16)
lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Guinardia_striata_a"[1:14], col = 'darkblue',type= 'o',pch=17)

lines(df.select.chl.tree_matrix.t$date[1:14],df.select.chl.tree_matrix.t$"Lingulodinium_polyedrum_a"[1:14], col = 'green',type= 'o',pch=18)


legend("topright",colnames(unique.select.chl.otus),lty=1,col=c('darkgreen','blue','red','brown','magenta','orange','purple','darksalmon','darkblue','green'),cex=0.75)


at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2,cex.axis=2)

dev.off()




#all.dino
plot.new()
pdf("alldino.18S.march.lineplot.pdf",width=10, height=5)
all.chl.tree_matrix <- read.csv("myDF.alldino.csv",row.names=1,check.names=F,header=F)
all.chl.tree_matrix.t <- t(all.chl.tree_matrix)
df.all.chl.tree_matrix.t <- as.data.frame(all.chl.tree_matrix.t)
df.all.chl.tree_matrix.t$date <- as.Date(as.character(df.all.chl.tree_matrix.t$date))
df.all.chl.tree_matrix.t[2:51] <- lapply(df.all.chl.tree_matrix.t[2:51], as.character)
df.all.chl.tree_matrix.t[2:51] <- lapply(df.all.chl.tree_matrix.t[2:51], as.numeric)
df.all.chl.tree_matrix.t[2:51] <- df.all.chl.tree_matrix.t[2:51]
highest.all.chl <- colnames(df.all.chl.tree_matrix.t)[apply(df.all.chl.tree_matrix.t, 1, which.max)]
highest.all.chl.march <- highest.all.chl[1:14]
unique.all.chl <- unique(unlist(highest.all.chl.march))
test.all <- unique(cbind(c(unique.chl,unique.select.chl,unique.all.chl)))
unique.all.chl.otus <- df.all.chl.tree_matrix.t[,test.all]
dates.all.chl.otus <- merge(df.all.chl.tree_matrix.t$date,unique.all.chl.otus)
cordx <- df.environ.t$date[s]
cordx <- cordx[1:16]
cordy <- df.environ.t$bottle_chl[s]
cordy <- cordy[1:16]
par(mar=c(5,4,4,5)+.1)
plot(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='gray',type='l',xaxt="n") 
polygon(c(cordx[1],cordx,cordx[16]), c(0,cordy,0), col='lightgray', border='lightgray')
par(new=TRUE)
plot(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Pseudo-nitzschia_australis_b"[1:14], type= 'o', col = 'green',xaxt="n",yaxt="n",xlab="",ylab="",ylim=c(0,0.4))
axis(4)
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Chlorodendrales_sp._b"[1:14], col = 'blue',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Noelaerhabdaceae_d"[1:14], col = 'brown',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Heterosigma_akashiwo_b"[1:14], col = 'darkred',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Chaetoceros_sp._h"[1:14], col = 'orange',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Ostreococcus_sp._e"[1:14], col = 'darkgreen',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Phaeocystis_sp._i" [1:14], col = 'black',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Phaeocystis_globosa_d"[1:14], col = 'darkblue',type= 'o')
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Coscinodiscophyceae_sp._a"[1:14], col = 'purple',type= 'o')

lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Lingulodinium_polyedrum_f"[1:14], col = 'red',type= 'o')

lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Dinophyceae_XX_e" [1:14], col = 'green',type= 'o',lty=2)
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Gymnodinium_a"[1:14], col = 'blue',type= 'o',lty=2)
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Gyrodinium+fusiforme_a"[1:14], col = 'brown',type= 'o',lty=2)
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Dinophyceae_XX_b"[1:14], col = 'darkred',type= 'o',lty=2)
lines(df.all.chl.tree_matrix.t$date[1:14],df.all.chl.tree_matrix.t$"Dinophyceae_sp._strain35_a"[1:14], col = 'orange',type= 'o',lty=2)

repeaters <- colnames(unique.all.chl.otus[1:10])
new.dinos <- colnames(unique.all.chl.otus[11:15])
legend("topright",repeaters,lty=1,col=c('green','blue','brown','darkred','orange','darkgreen','black','darkblue','purple','red'),cex=0.75)
legend("topleft",new.dinos,lty=2,col=c('green','blue','brown','darkred','orange'),cex=0.75)


at = format(df.environ.t$date,"%d") %in% c('02','04','06','08','10','12','14','16','18','20','22','24','26','28','30','01')
axis(side=1,at=df.environ.t$date[ at ], labels=format(df.environ.t$date[ at ], '%m/%d'),las=2)



dev.off()



##########input for no dino LSA vs chloroplast lsa, for supplemental side-by-side heatmaps

filter_otus_from_otu_table.py -i wout.dino.pr2.pos.chl.combined.seqs.biom -n 2 -o nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom
biom convert -i nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom -o nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt --table-type "OTU table" --to-tsv
tail -n +2 nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt > tail.nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt
sed 's/#OTU ID//g' tail.nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt > for.r.tail.nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt 

R
table.nodino <- read.table("for.r.tail.nosingletons.wout.dino.pr2.pos.chl.combined.seqs.biom.txt",row.names=1,header=T,check.names=F)
test.nodino <- as.data.frame(t(colSums(table.nodino)))
table.nodino.2 <- rbind.data.frame(table.nodino,test.nodino)
df.nodino <- as.matrix(table.nodino.2)
#set dimensions
df.nodino.2 <- t(t(df.nodino)/df.nodino[1243,])
df.no.dino.lsa.1 <- as.data.frame(df.nodino.2[-1243,])
avg <- rowMeans(df.no.dino.lsa.1)
df.no.dino.lsa.1$avg <- avg
sorted <- df.no.dino.lsa.1[order(-avg),]
sorted.1 <- t(sorted[1:100,-42])
dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.nodino.3.dates.nonsort <- merge(sorted.1,dates,by="row.names")
write.table("no.dino.top100", df.nodino.3.dates.nonsort ,quote=F,sep = ",")


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/ /Users/dmneedham/Desktop/R1.R3 


R
table <- read.table("otu.table.for.r.filt.2",row.names=1,header=T,check.names=F)
table.df <- as.data.frame(t(colSums(table)))
table.chl.2 <- rbind.data.frame(table,table.df)
table.chl.2.matrix <- as.matrix(table.chl.2)
#set dimensions
df.chl.2 <- t(t(table.chl.2.matrix )/table.chl.2.matrix [3126,])
df.chl.lsa.1 <- as.data.frame(df.chl.2[-3126,])
avg <- rowMeans(df.chl.lsa.1)


df.chl.lsa.1$avg <- avg
sorted <- df.chl.lsa.1[order(-avg),]
sorted.1 <- t(sorted[1:200,-42])
dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.chl.3.dates.nonsort <- merge(sorted.1,dates,by="row.names")
write.table(file="top200.w.chl", df.chl.3.dates.nonsort ,quote=F,sep = ",")




scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/top200.w.chl /Users/dmneedham/Desktop/R1.R3 



scp /Users/dmneedham/Desktop/data.dots1.81315/weird18S.plus.top200.txt david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis



python charade-elsa-08453d57609c/lsa/lsa_compute.py weird18S.plus.top200.txt weird18S.plus.top200.output.theo.txt -p theo -d 0 -s 41


cut weird18S.plus.top200.output.theo.txt -f1,2,16,17 | grep "dino" | grep "chl" > dino.weird.chl.matches



scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/dino.weird.chl.matches /Users/dmneedham/Desktop/R1.R3


R
setwd("~/Desktop/R1.R3")
library(data.table)
test <- read.table(file="dino.chl.matches",header=F)
dat <- as.data.table(test)
dat.chl <- dat[,.SD[which.max(V3)],by=V2]
dat.dino <- dat[,.SD[which.max(V3)],by=V1]
write.table(dat.chl,file="dat.chl")
write.table(dat.dino,file="dat.dino")

grep -w -f chl_denovo.ids.chl dat.chl > heatmap.chl.matches
grep -f no.dino.denovo.ids.no.dino dat.dino > heatmap.no.dino.matches










#####collect selected chloroplast OTUs that did not exceed 5% or 1% thresholds, but have strong correlations to the 18S data...

nano
denovo47305denovo207408denovo166039denovo76808
denovo67610 (bolidomonas)
denovo52406 (most abundant rhizosolenia)

#remove singletons from chloroplast table
filter_otus_from_otu_table.py -e extra.chl --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o extra.chl.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom

filter_otus_from_otu_table.py -e bolido --negate_ids_to_exclude -i rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom  -o bolido.biom



biom convert -i bolido.biom -o bolido.biom.txt --table-type "OTU table" --to-tsv


filter_fasta.py -s  extra.chl -f chimeras_removed_dots1.fasta_rep_set.fasta -o extra.chl.fasta

tail -n +2 extra.chl.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt > rm.for.R.extra.chl.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt


sed 's/den/chl_den/g' rm.for.R.extra.chl.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt |sed 's/#OTU ID//g' > chl.rm.frm.for.R.extra.chl.rarified.1um.no.singletons_only.chl_gg_chimeras_removed_dots1_otus.txt.biom.txt

tail -n +2 bolido.biom.txt > rm.for.R.bolido.biom.txt
sed 's/den/chl_den/g' rm.for.R.bolido.biom.txt |sed 's/#OTU ID//g' > chl.rm.for.R.bolido.biom.txt



R
table <- read.table("chl.rm.for.R.bolido.biom.txt",header=T,row.names=1,check.names=F)
names <- read.table("chl.vlookup.2",sep = "\t",row.names=1)
test <- merge(table,names,by="row.names")


dates <- read.table(file="replacement.dates",header=F,row.names=1)
dates$V2 <- as.Date(dates$V2,format='%Y-%m-%d')
df.selectdino.3.dates.nonsort <- merge(test,dates,by="row.names")
write.table(df.selectdino.3.dates.nonsort,file="bolido.table.txt")


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/extra.chl.txt /Users/dmneedham/Desktop/R1.R3


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/extra.chl.fasta /Users/dmneedham/Desktop/R1.R3

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chl.rm.for.R.bolido.biom.txt /Users/dmneedham/Desktop/R1.R3


cd /Users/dmneedham/Desktop/R1.R3
cat extra.chl.fasta /Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap/max.avg.5and1.seqs.9715.fasta > heatmap.chl.plus.extra.fasta


#5% chloroplast any single day or 1% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap")
chl.tree <- read.tree("chl.tree") 
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("max5.avg1.otu.csv",row.names=1,check.names=F)/2284)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.5.percent.anyday.1.average.2.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("chl.50.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()

#5% chloroplast any single day or 1% on average
library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap")
chl.tree <- read.tree("chl.extra.tree") 
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- (read.csv("max5.avg1.otu.wextra.chl.csv",row.names=1,check.names=F)/2284)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
#pdf('chl.5.percent.anyday.1.average.2.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast.5percent.any.day.or1average", line = -2, font=12)
dev.off()
pdf("chl.50.tree.pdf")
plot(chl.tree)
add.scale.bar(length=0.2)
dev.off()

setwd("/Users/dmneedham/Desktop/data.dots1.81315/heatmaps/chl.5.1.heatmap")
chl.tree_matrix <- (read.csv("matches.18Sorder.max5.avg1.otu.wextra.chl.csv",row.names=1,check.names=F)/2284)
pdf("matches18S.heatmap.only_2.pdf")
heatmap3(as.matrix(chl.tree_matrix),Rowv=NA, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
dev.off()


#############################################################################################################################################################################################
Making phylogeny of the chl ncbi seqs and representative seqs, did not make paper
#############################################################################################################################################################################################

fasta rep set, chl: 
max.avg.5and1.seqs.9715.fasta


ncbi.chl.otus
phytoref.seqs.otus


top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta
phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta

grep -w -f ncbi.chl.otus top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta | sort -u -k1,1 | cut -f2 | cut -f4 -d '|' > ncbi.gis

grep -w -f phytoref.seqs.otus phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta | sort -u -k1,1 | cut -f 2 > phytoref.seq.ids

filter_fasta.py -s phytoref.seq.ids -f PhytoRef_with_name_only.fasta -o phytoref.ref.seqs.fasta

combined in geneious aligned using the default MAFFT aligner
trimmed the sequences a constant length (the rep sets are longer because the ncbi already been trimmed) of about 329-338.
10 bootstraps in phyml 





#############################################################################################################################################################################################
FILES FOR FIGSHARE
#############################################################################################################################################################################################

######
Representive sequence files
######

#16S OTU Representative sequences
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files
mv chimeras_removed_dots1.fasta_rep_set.fasta 16S.representative.sequences.fasta
#18S OTU Representative sequences
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/combined.seq_rep_set.fasta /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files
mv combined.seq_rep_set.fasta 18S.representative.sequences.fasta

######
TAXONOMY ASSIGNMENT FILES
######


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/all.18S.rep.seqs.rdp.tax/combined* /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv combined.seq_rep_set_tax_assignments.log 18S.pr2.rdp.qiime.log &&
mv combined.seq_rep_set_tax_assignments.txt 18S.pr2.rdp.qiime.txt &&

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/gg_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/no_singletons* /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv no_singletons.chimeras_removed_dots1.fasta_rep_set_tax_assignments.log 16S.gg.ulust.qiime.tax.log &&
mv no_singletons.chimeras_removed_dots1.fasta_rep_set_tax_assignments.txt 16S.gg.ulust.qiime.tax.txt &&

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/silva_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta/no_singletons* /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv no_singletons.chimeras_removed_dots1.fasta_rep_set_tax_assignments.log 16S.silva.ulust.qiime.tax.log &&
mv no_singletons.chimeras_removed_dots1.fasta_rep_set_tax_assignments.txt 16S.silva.ulust.qiime.tax.txt &&

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta 16S.ncbi.cultured.blastn.tax &&

scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv phytoref.top1_no_singletons.chimeras_removed_dots1.fasta_rep_set.fasta 16S.phytoref.blastn.tax


scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/gg_chimeras_removed_dots1_otus.txt.biom /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv gg_chimeras_removed_dots1_otus.txt.biom dots1.16S.full.OTU.table.biom &&
scp david@kraken.usc.edu:/korriban/david/diatom_bloom_tag_analysis/r1.r3.for.euk.test/combined.seqs.biom /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
cd /Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files &&
mv combined.seqs.biom dots1.18S.full.OTU.table.biom






#Attribute table




#ODV input, environmental table

#16S bact/arch OTU tables, no singletons,

#16S chl OTU tables, no singletons

#18S select dino OTU tables from Mantel tests, include all but singletons...

#18S no dino OTU tables from Mantel tests, include all but singletons...

#LSA inputs

#LSA Outputs

#mapping files
/Users/dmneedham/Desktop/data.dots1.81315/Fig_Share_files/Demultplexing.files.for.dots1.pub 

#############################################################################################################################################################################################
print_qiime_config.py -tb
#############################################################################################################################################################################################

System information
==================
         Platform:	linux2
   Python version:	2.7.3 (default, Feb 13 2014, 19:15:15)  [GCC 4.8.1]
Python executable:	/usr/local/qiime_software/python-2.7.3-release/bin/python

Dependency versions
===================
             PyCogent version:	1.5.3
                NumPy version:	1.7.1
           matplotlib version:	1.3.1
          biom-format version:	1.3.1
                 qcli version:	0.1.0
        QIIME library version:	1.8.0
         QIIME script version:	1.8.0
PyNAST version (if installed):	1.2.2
              Emperor version:	0.9.3

QIIME config values
===================
                     blastmat_dir:	/usr/local/qiime_software/blast-2.2.22-release/data
                         sc_queue:	all.q
      topiaryexplorer_project_dir:	None
     pynast_template_alignment_fp:	/usr/local/qiime_software/core_set_aligned.fasta.imputed
                  cluster_jobs_fp:	/usr/local/qiime_software/qiime-1.8.0-release/bin/start_parallel_jobs.py
pynast_template_alignment_blastdb:	None
assign_taxonomy_reference_seqs_fp:	/usr/local/qiime_software/gg_otus-13_8-release/rep_set/97_otus.fasta
                     torque_queue:	friendlyq
   template_alignment_lanemask_fp:	/usr/local/qiime_software/lanemask_in_1s_and_0s
                    jobs_to_start:	1
                cloud_environment:	False
                qiime_scripts_dir:	/usr/local/qiime_software/qiime-1.8.0-release/bin
            denoiser_min_per_core:	50
                      working_dir:	/korriban/tmp/
                    python_exe_fp:	/usr/local/qiime_software/python-2.7.3-release/bin/python
                         temp_dir:	/korriban/tmp/
                      blastall_fp:	/usr/local/qiime_software/blast-2.2.22-release/bin/blastall
                 seconds_to_sleep:	60
assign_taxonomy_id_to_taxonomy_fp:	/usr/local/qiime_software/gg_otus-13_8-release/taxonomy/97_otu_taxonomy.txt
...............
----------------------------------------------------------------------
Ran 15 tests in 0.065s





#1% chloroplast times the chlorophyll concentration

library(heatmap3)
library(ape)
yellow.red <- colorRampPalette(c("lightyellow", "red","black"), space = "rgb")(100)
setwd("~/Desktop/Nature_submission")
chl.tree <- read.tree("chl.1.0.tree")
chl.tree$edge.length[which(chl.tree$edge.length == 0)] <- 0.00001
chl.tree_um <- chronopl(chl.tree, lambda = 0.1, tol = 0)
chl.tree_d <- as.dendrogram(as.hclust.phylo(chl.tree_um))
chl_order <- order.dendrogram(chl.tree_d)
chl.tree_name <- labels(chl.tree_d)
chl.tree_position <- data.frame(chl.tree_name, chl_order)
chl.tree_position_2 <- chl.tree_position[order(chl.tree_position$chl_order),]
chl.tree_matrix <- read.csv("chl.heatmap.1percent.tetra.chlconc.csv",row.names=1,check.names=F)
chl.tree_order <- match(chl.tree_position_2$chl.tree_name, row.names(chl.tree_matrix))
chl.tree_ordered_matrix <- chl.tree_matrix[chl.tree_order,]
pdf('chl.times.chlconc.pdf')
heatmap3(as.matrix(chl.tree_ordered_matrix),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast", line = -2, font=12)
dev.off()
#pdf("chl.1.0.tree.pdf")
#plot(chl.tree)
#add.scale.bar(length=0.2)
#dev.off()
pdf('chl.times.chlconc.sqrt.pdf')
heatmap3(sqrt(as.matrix(chl.tree_ordered_matrix)),Rowv=chl.tree_d, Colv=NA, col = yellow.red, margins = c(3, 15),cexRow=0.75,cexCol=0.75, scale = 'none')
title("Chloroplast", line = -2, font=12)
dev.off()
